<html>
<head>
<title>Jmol Interactive Examples</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="styles.css" />
<script type="text/javascript" src="Jmol-11.js"></script>
<script type="text/javascript" src="new.js"></script>
<script type="text/javascript">
//<![CDATA[
defaultloadscript=";color altloc;restrict none;conformation 0;cartoon on;select not *%;wireframe 0.15;spacefill 0.15"

title="ATOMS";model='"5hvp.cif"'
docsearch = document.location.search.substring(1)
if(docsearch.indexOf("model=")>=0)model='"'+unescape(docsearch.split("model=")[1].split("&")[0])+'"'

//model+=defaultloadscript

messagecallback="showmsg"
animcallback=""
pickcallback=""
loadstructcallback=""

delayms = 100; delayms0 = 1000
polling = false;


Callbacks=new Array("-atomPicked","-fileLoaded","-fileLoadError","-frameChanged","-measurePending","-measureCompleted","-measurePicked","-scriptStarted","-scriptEcho","-scriptStatus","-scriptError","-scriptMessage", "-scriptTerminated","-userAction","-viewerRefreshed","-newOrientation")

function getCheckList(){
 var s=""
 var skey=""
 var ischecked=0
 for(var i=0;i<Callbacks.length;i++){
	skey=Callbacks[i]
	ischecked=(skey.charAt(0)!="-")
	if(ischecked)polling=true;
	Callbacks[i]=skey=skey.replace(/\-/,"")
	s+=" <label><input type=checkbox onclick=getCallbackOptions() id='"+skey+"'"+(ischecked?" checked=1":"")+">"+skey+"</label>"
	if((i+1)%4==0)s+="<br>"
 }
 s+=" <a href=javascript:setOptions(1)>all</a> <a href=javascript:setOptions(0)>none</a> "
 return s
}

function getCallbackOptions(){
 var s=""
 for(var i=0;i<Callbacks.length;i++)if(document.getElementById(Callbacks[i]).checked)s+=Callbacks[i]
 var waspolling = polling
 polling = (s!="")
 if(polling && !waspolling)pollApplet()
 return "monitoring:"+s
}

function pollApplet(){
   whatm=getCallbackOptions()
   if(!polling){
	document.title = ""
	return
   }
   document.title = (new Date())
   var A=jmolGetStatus(whatm)
   parseMessages(A)
   if(polling)setTimeout("pollApplet()",delayms)
}

function setOptions(all_or_none){
 for(var i=0;i<Callbacks.length;i++)document.getElementById(Callbacks[i]).checked = all_or_none
 polling = (all_or_none == 1) 
}

function docheck(i){
 if (i==1)alert(document.getElementById("jmolApplet0").getProperty("jmolviewer").getDisplayModelIndex())
}


Scripts=new Array(" "
 ,' This prototype page illustrates the reading of alternate locations in mmCIF and PDB files. Note also the use of <b>set defaultLoadScript</b>'
 ,'### color altloc ###'
 ,'load 5hvp.cif; # two inhibitor alignments'
 ,'load 1hje.cif; # two tail conformations'
 ,'load 3ovo.cif; # just a tiny difference'
 ,'load 1mng.cif; # dimeric iron complex; almost no difference'
 ,'set defaultLoadScript "'+defaultloadscript+'"'
 ,'set defaultLoadScript ""'
 ,'select *;color structure'
 ,'select *;color altloc'
 ,'load 1VWH.cif;color altloc; # two loop conformations'
 ,'load 1VIF.cif;color altloc; # two ligand conformations'
 ,'### conformation n ###'

 ,'restrict none;conformation 0;wireframe 0.15 #shows all, like model 0, with wireframe'
 ,'restrict none;conformation 1;wireframe 0.15'
 ,'restrict none;conformation 2;wireframe 0.15'
 ,'restrict none;conformation 0;cartoon on; #toggles conformations because only one alternate location can be shown in secondary structure'
 ,'restrict none;conformation 1;cartoon on;'
 ,'restrict none;conformation 2;cartoon on;'
 ,'cartoon off;wireframe 0.15'
 ,'cartoon on;wireframe 0'
 ,'### more precise, using % ###'
 ,'load 1hje.pdb;'
 ,'color altloc'
 ,'color amino'
 ,'restrict none;select *;wireframe 0.15;'
 ,'select *%A or *%B; spacefill 0;label %A;'
 ,'restrict none;conformation 0;wireframe 0.15'
 ,'restrict none;conformation 1;wireframe 0.15'
 ,'restrict none;conformation 2;wireframe 0.15'
 ,'select *;labels off'
 ,'load 5hvp.cif;'
 ,'color altloc'
 ,'select *%;color yellow'
 ,'select *% and within(4.0, *%1 or *%2);color red'

 ,'### designer conformations ###'
 ,'load 1VWH.cif;color altloc;restrict none;select *;cartoon on'
 ,'conformation 1'
 ,'conformation 2'
 ,'select 59-64 and (*%,*%A) or 65-70 and (*%,*%B);conformation'

 ,'### multiple file load for overlay of models ###'
 ,'# note that when multiple files are loaded, 1000 is added to each model number so as to designate which model in which file'
 ,'load "1vwh" "1VWH.cif" "1VWH.cif";color altloc;restrict none;select *;cartoon on'
 ,'model 1001;conformation 1'
 ,'model 2001;conformation 2'
 ,'model 0'

 ,'### insertion code support ###'
 ,'load 1JGQ.pdb;select *;color insertion'
 ,'select 186^?;spacefill on'
 ,'select 186^*;spacefill on;color white'
 ,'select *^?;spacefill on;color yellow'
 ,'select *^A;spacefill on;color blue'

 ,'#from PDB advanced search "alternative locations"'
 ,'load 1ADE.cif;color altloc;'
 ,'load 1B2K.cif;color altloc;'
 ,'load 1BLC.cif;color altloc;'
 ,'load 1CRC.cif;color altloc;'
 ,'load 1ECN.cif;color altloc;'
 ,'load 1HF4.cif;color altloc;'
 ,'load 1LDN.cif;color altloc;'
 ,'load 1LIN.cif;color altloc;'
 ,'load 1MYG.cif;color altloc;'
 ,'load 1PHA.cif;color altloc;'
 ,'load 1PHB.cif;color altloc;'
 ,'load 1VWP.cif;color altloc;'
 ,'load 1XIS.cif;color altloc;'
 ,'load 1XY1.cif;color altloc;'
 ,'load 1XY2.cif;color altloc;'
 ,'load 2LHB.cif;color altloc;'
 ,'load 2TBV.cif;color altloc;'
 ,'load 4DFR.cif;color altloc;'
 ,'load 5BIR.cif;color altloc;'
 ,'load 1zir.cif;color altloc;'

 ,' <a href=javascript:dotest(-1)>[appletInfo]</a>'
 +' <a href=javascript:dotest(-2)>[animationInfo]</a>'
 +' <a href=javascript:dotest(0)>[fileName]</a>'
 +' <a href=javascript:dotest(1)>[fileHeader]</a>'
 +' <a href=javascript:dotest(2)>[fileContents]</a>'
 +'<br><a href=javascript:dotest(8.1)>[atomList]</a>'
 +' <a href=javascript:dotest(8)>[atomInfo]</a>'
 +' <a href=javascript:dotest(7)>[bondInfo]</a>'
 +' <a href=javascript:dotest(7.5)>[moleculeInfo]</a>'
 +' <a href=javascript:dotest(3.6)>[measuremenInfo]</a>'
 +" <a href=javascript:dotest(10)>[extractModel]</a>"
 +'<br><a href=javascript:dotest(3)>[orientationInfo]</a>'
 +' <a href=javascript:dotest(3.1)>[auxiliaryInfo]</a>'
 +' <a href=javascript:dotest(3.2)>[transformInfo]</a>'
 +' <a href=javascript:dotest(3.3)>[centerInfo]</a>'
 +' <a href=javascript:dotest(3.4)>[boundboxInfo]</a>'
 +"<br><a href=javascript:dotest(4)>[modelInfo]</a>"
 +" <a href=javascript:dotest(4.2)>[polymerInfo]</a>"
 +" <a href=javascript:dotest(4.3)>[chainInfo]</a>"
 +" <a href=javascript:dotest(4.4)>[shapeInfo]</a>"
 +" <a href=javascript:dotest(4.5)>[stateInfo]</a>"
 +" <a href=javascript:dotest(9)>[reload THIS orientation]</a>"
 +"<br><br>"
// +" <a href=javascript:pollApplet()>[jmolStatus]</a>"
 +" monitor: "
 +getCheckList()

//," JSON data returned:<br><textarea name=outputJSON id=outputJSON rows=5 cols=50></textarea>"
," <input type=checkbox name=idecode id=idecode checked=1>Decoded: <a href=javascript:showoutput()>new window</a><br><textarea name=output id=output rows=5 cols=60 wrap=off></textarea>"
)
remarks=""
//]]>

what="visible"
whatp="centerInfo"
whatm=""

function xshowoutput(s){ if(!s) s=document.getElementById("output").value; dowritenew("<pre>"+s+"</pre>") };function oldshowoutput(){
 dowritenew("<pre>"+document.getElementById("output").value+"</pre>")
}

function dotest(iwhat){
 if(iwhat!=3)monitoron=false
 var s=""
 var sJSON=""
 var info=""
 var sinfo=""
 var sparam=""
 var str=""
 if(iwhat==-1){
   sinfo="appletInfo"
 }else if(iwhat==-2){
   sinfo="animationInfo"
 }else if(iwhat==0){
   str="fileName"
 }else if(iwhat==1){
   str="fileHeader"
   info = jmolGetPropertyAsString(sinfo)
 }else if(iwhat==2){
   str="fileContents"
 }else if(iwhat==3){
   sinfo="orientationInfo"
 }else if(iwhat==3.1){
   sinfo="auxiliaryInfo"
 }else if(iwhat==3.2){
   sinfo="transformInfo"
 }else if(iwhat==3.3){
   sinfo="centerInfo"
 }else if(iwhat==3.4){
   sinfo="boundboxInfo"
 }else if(iwhat==3.5){
   sinfo="zoomInfo"
 }else if(iwhat==3.6){
   sinfo="measurementInfo"
 }else if(iwhat==4){
   sinfo="modelInfo"
 }else if(iwhat==4.2){
   sparam="PROMPT"
   sinfo="polymerInfo"
 }else if(iwhat==4.3){
   sparam="PROMPT"
   sinfo="chainInfo"
 }else if(iwhat==4.4){
   sinfo="shapeInfo"
 }else if(iwhat==4.5){
   sparam="visible"
   sinfo="stateInfo"
 }else if(iwhat==7){
   sparam="PROMPT"
   sinfo="bondInfo"
 }else if(iwhat==7.5){
   sparam="PROMPT"
   sinfo="moleculeInfo"
 }else if(iwhat==8){
   sparam="PROMPT"
   sinfo="atomInfo"
 }else if(iwhat==8.1){
   sparam="PROMPT"
   sinfo="atomList"
 }else if(iwhat==9){
   info = jmolGetPropertyAsArray("orientationInfo")
   s="load "+jmolGetPropertyAsString("fileName")+";"+info.moveTo
   document.getElementById("cmd").value=s
   jmolScript(s)
 }else if(iwhat==10){
   s=prompt("enter an atom expression",what)
   if(!s)return
   what=s
   s = jmolGetPropertyAsString("extractModel",what)
   var A=jmolGetPropertyAsArray("orientationInfo")
   showoutput(s);   jmolLoadInlineScript(s,A.moveTo)
 }
 if(str!=""){
   s=jmolGetPropertyAsString(str)
 }else if(sinfo!=""){
   if(sparam == "PROMPT"){
     s=prompt("enter an atom expression",what)
     if(!s)return
     what=s
     sparam=what
   }
   if(document.getElementById("idecode").checked){
	s=jmolGetPropertyAsArray(sinfo,sparam)
	s=_jmolEnumerateObject(s,sinfo)
   }else{
	s=jmolGetPropertyAsJSON(sinfo,sparam)
   }
 }
 if(s!="")document.getElementById("output").value=s
}

function parseMessages(A){
 if(!A)return
 var s=""
 for(var i=A.length-1;i>=0;i--){
	s=A[i][3]+"\n"+s
	showmsg("msg",A[i])
 }
 document.getElementById("output").value=s
}

monitoron=0
function domonitor(isiter){
  if(!isiter)monitoron=!monitoron
  if(!monitoron)return
  dotest(3)
  setTimeout("domonitor(1)",delayms)  
}

</script>
</head>
<body onload = "setTimeout('pollApplet()',delayms0)">
<script type="text/javascript">showpage(0)</script></body>
</html>
