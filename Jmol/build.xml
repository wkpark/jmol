<project name="Jmol" default="main" basedir=".">

  <!-- pull developer-specific settings from their home directory -->
  <property file="${user.home}/.jmol.build.properties" />

  <!-- compile options -->
  <property name="build.sysclasspath" value="ignore" />
  <property name="build.compiler" value="javac1.4" />
  <!-- for some reason, I can't get ant to use this ${java.version}
       property as the value of the source parameter -->
  <property name="java.version" value="1.4" />
  <property name="debug" value="on" />
  <property name="deprecation" value="off" />
  <property name="optimization" value="off" />

  <property name="version" value="10.00" />

  <property name="tests.source.dir" value="source-tests" />
  <property name="lib.dir" value="jars" />
  <property name="plugin.dir" value="plugin-jars" />
  <property name="appjars.dir" value="build/appjars" />
  <property name="classes.dir" value="build/classes" />
  <property name="tests.classes.dir" value="build/classes-tests" />
  <property name="appletjars.dir" value="build/appletjars" />
  <property name="applet.classes.dir" value="build/applet-classes" />
  <property name="tests.dir" value="build/unit.tests" />
  <property name="javadoc.dir" value="javadoc" />
  <property name="docbook-xsl" value="docbook-xsl-1.67.2" />
  <property name="docbook-xml" value="docbook-xml-4.3" />

  <!-- you can set this by defining it in ~/.jmol.build.properties -->
  <property name="keystore.name" value="Must be set by user." />

  <property file="proxy.properties" />

  <path id="project.class.path">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
      <exclude name="jmolappletcdk.jar"/>
    </fileset>
  </path>
  
  <path id="applet-project.class.path">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
      <exclude name="jmol2cdk.jar"/>
    </fileset>
  </path>
  
  <target name="main" id="main" depends="init,jar,applet-jar"/>
  
  <target name="all" id="all" depends="doc,main"/>

  <target name="init" id="init">
    <tstamp/>
  </target>

  <target name="initFailure" id="initFailure">
    <fail message="Init failed. See messages above." />
  </target>

  <target name="setup" id="setup">
    <uptodate property="docbook-xsl.uptodate"
	      targetfile="build/${docbook-xsl}"
	      srcfile="doc/${docbook-xsl}.tar.gz" />
    <uptodate property="docbook-xml.uptodate"
	      targetfile="build/docbook-xml"
	      srcfile="doc/${docbook-xml}.zip" />

    <condition property="jmolGuide.uptodate">
      <and>
	<uptodate targetfile="build/doc/JmolUserGuide/index.html">
	  <srcfiles dir="doc/source"
		    includes="JmolGuide.docbook.xml, guide/*.docbook.xml"/>
	</uptodate>
	<uptodate targetfile="build/doc/JmolUserGuide_fr/index.html">
	  <srcfiles dir="doc/source"
		    includes="JmolGuide_fr.docbook.xml, guide/*_fr.docbook.xml"/>
	</uptodate>
      </and>
    </condition>

    <condition property="jmolHistory.uptodate">
      <and>
	<uptodate targetfile="build/doc/JmolHistory/ChangeLog.html">
	  <srcfiles dir="doc/source"
		    includes="JmolHistory.xml,JmolHistoryToHtml.xsl" />
	</uptodate>
	<uptodate targetfile="build/doc/JmolHistory/ChangeLog_fr.html">
	  <srcfiles dir="doc/source"
		    includes="JmolHistory_fr.xml,JmolHistoryToHtml.xsl" />
	</uptodate>
      </and>
    </condition>
    
    <condition property="jmolDevelopersGuide.uptodate">
      <and>
	<uptodate targetfile="build/doc/JmolDevelopersGuide.html">
	  <srcfiles dir="doc/source"
		    includes="JmolDevelopersGuide.docbook.xml"/>
	</uptodate>
	<uptodate targetfile="build/doc/JmolDevelopersGuide_fr.html">
	  <srcfiles dir="doc/source"
		    includes="JmolDevelopersGuide_fr.docbook.xml"/>
	</uptodate>
      </and>
    </condition>

    <condition property="jmolAppletGuide.uptodate">
      <and>
	<uptodate targetfile="build/doc/JmolAppletGuide.html">
	  <srcfiles dir="doc/source"
		    includes="JmolAppletGuide.docbook.xml, applet/*.docbook.xml"/>
	</uptodate>
	<uptodate targetfile="build/doc/JmolAppletGuide_fr.html">
	  <srcfiles dir="doc/source"
		    includes="JmolAppletGuide_fr.docbook.xml, applet/*_fr.docbook.xml"/>
	</uptodate>
      </and>
    </condition>

    <available classname="com.icl.saxon.StyleSheet"
	       classpath="${lib.dir}/saxon.jar"
	       property="xsl.available"/>
    <uptodate property="javadoc.uptodate" targetfile="${javadoc.dir}/index.html">
      <srcfiles dir="src" includes="**/*.java, **/*.html" />
    </uptodate>
    <available file="${keystore.name}" property="keystore.present" />
    <!-- Optional proxy settings (if defined) -->
    <condition property="proxyHost"
	       value="-Dhttp.proxyHost=${http.proxyHost}" >
      <not>
	<equals arg1="http.proxyHost" arg2="" />
      </not>
    </condition>
    <condition property="proxyPort"
	       value="-Dhttp.proxyPort=${http.proxyPort}" >
      <not>
	<equals arg1="http.proxyPort" arg2="" />
      </not>
    </condition>
  </target>

  <target id="classes" name="classes" depends="init">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="src" destdir="${classes.dir}"
	   debug="${debug}" deprecation="${deprecation}"
	   optimize="${optimization}" source="1.4">
      <classpath refid="project.class.path" />
      <!-- removed until all base classes are CDK based -->
      <exclude name="org/openscience/jmol/io/ShelXReader.java"/>
    </javac>
    <copy todir="${classes.dir}" >
      <fileset dir="src">
	<include name="**/*.jpg" />
	<include name="**/*.gif" />
	<include name="**/*.html" />
	<include name="**/*.dtd" />
	<include name="**/*.properties" />
	<include name="**/Properties/*" />
	<include name="**/Data/*" />
	<include name="**/*.txt" />
      </fileset>
    </copy>
  </target>
  
  <target name="applet-classes" id="applet-classes" depends="init">
    <mkdir dir="${applet.classes.dir}"/>
    <property name="build.compiler" value="javac1.1" />
    <!-- mth 20040713 ... with the Sun Java 1.5 compiler the default
	 source code version is 1.5. And one cannot generate code for
	 a 1.1 virtual machine from 1.5 source. Therefore, in order to
	 compile for the 1.1 jvm, we need to specify that the source
	 version is 1.3. (Note that we cannot use source=1.4 because
	 of assertions)

miguel 20041121
I do not know recall exactly what I meant by the statement
in (parentheses) above. I *think* that what I was saying
is that if you say 'source=1.4' then one also cannot
generate code for a 1.1 jvm, because of the special
support for assertions (which were introduced in 1.4). 
    -->
    <javac srcdir="src" destdir="${applet.classes.dir}"
	   debug="${debug}" deprecation="${deprecation}"
	   optimize="${optimization}"
	   source="1.3" target="1.1"
	   includesfile="applet.classes"
	   classpathref="applet-project.class.path" />
    <!-- mth tried to use exclude and excludefiles, but it did not work -->
    <delete includeEmptyDirs="true">
      <fileset dir="${applet.classes.dir}/org/openscience/jmol">
	<include name="*.class" />
      </fileset>
    </delete>
    

    <copy todir="${applet.classes.dir}" >
      <fileset dir="src">
	<include name="**/ui/*.properties" />
	<include name="jmol75x29x8.gif" />
      </fileset>
    </copy>
  </target>

  <target name="check.cdkjars" id="check.cdkjars">
    <uptodate property="cdkjars.uptodate" targetfile="${appjars.dir}/org/openscience/cdk">
      <srcfiles dir="${lib.dir}" includes="jmol2cdk.jar"/>
      <srcfiles dir="${lib.dir}" includes="dadml.jar"/>
    </uptodate>
  </target>
  
  <target name="check.pluginjars" id="check.pluginjars">
    <uptodate property="pluginjars.uptodate" targetfile="${appjars.dir}/org/openscience/cdkplugin">
      <srcfiles dir="${plugin.dir}" includes="dirbrowser.jar"/>
    </uptodate>
  </target>
  
  <target name="check.libjars" id="check.libjars">
    <uptodate property="libjars.uptodate" targetfile="${appjars.dir}">
      <srcfiles dir="${lib.dir}" includes="vecmath1.2-1.14.jar"/>
      <srcfiles dir="${lib.dir}" includes="Acme.jar"/>
      <srcfiles dir="${lib.dir}" includes="itext-0.94.jar"/>
      <srcfiles dir="${lib.dir}" includes="commons-cli-1.0.jar"/>
      <srcfiles dir="${lib.dir}" includes="dadml.jar"/>
    </uptodate>
  </target>
  
  <target name="appjars" id="appjars" depends="libjars, cdkjars, pluginjars"/>
  
  <target name="cdkjars" id="cdkjars" depends="check.cdkjars" unless="cdkjars.uptodate">
    <mkdir dir="${appjars.dir}"/>
    <unjar dest="${appjars.dir}" src="${lib.dir}/jmol2cdk.jar"/>
    <unjar dest="${appjars.dir}" src="${lib.dir}/dadml.jar"/>
  </target>

  <target name="pluginjars" id="pluginjars" depends="check.pluginjars" unless="pluginjars.uptodate">
    <mkdir dir="${appjars.dir}"/>
    <unjar dest="${appjars.dir}" src="${plugin.dir}/dirbrowser.jar"/>
  </target>

  <target name="libjars" id="libjars" depends="check.libjars" unless="libjars.uptodate">
    <mkdir dir="${appjars.dir}"/>
    <unjar dest="${appjars.dir}" src="${lib.dir}/vecmath1.2-1.14.jar"/>
    <unjar dest="${appjars.dir}" src="${lib.dir}/Acme.jar"/>
    <unjar dest="${appjars.dir}" src="${lib.dir}/itext-0.94.jar"/>
    <unjar dest="${appjars.dir}" src="${lib.dir}/commons-cli-1.0.jar"/>
    <unjar dest="${appjars.dir}" src="${lib.dir}/dadml.jar"/>
  </target>

  <target name="jar" id="jar" depends="init,classes,jmolGuide,jmolHistory,jmolDevelopersGuide,appjars">
    <copy todir="${classes.dir}/org/openscience/jmol/Data/guide" >
      <fileset dir="build/doc/JmolUserGuide">
	<include name="**/*.html" />
      </fileset>
    </copy>
    <copy todir="${classes.dir}/org/openscience/jmol/Data/guide_fr" >
      <fileset dir="build/doc/JmolUserGuide_fr">
	<include name="**/*.html" />
      </fileset>
    </copy>
    <copy todir="${classes.dir}/org/openscience/jmol/Data" >
      <fileset dir="build/doc/JmolHistory">
	<include name="**/*.html" />
      </fileset>
    </copy>
    <jar jarfile="Jmol.jar" manifest="manifest/application.txt">
      <fileset dir="${classes.dir}" >
	<exclude name="**/.*" />
	<exclude name="**/Test*.class" />
	<exclude name="**/jmol/applet/*" />
	<include name="**/jmol/**" />
	<include name="com/**" />
	<include name="freeware/**" />
      </fileset>
      <fileset dir="${appjars.dir}" includes="**/*"/>
    </jar>
  </target>

  <target name="apis-jar" id="apis-jar" depends="init,classes">
    <jar jarfile="jmolApis.jar">
      <fileset dir="${classes.dir}" >
	<include name="org/jmol/api/**" />
      </fileset>
      <fileset dir="." >
	<include name="LICENSE.txt"/>
      </fileset>
    </jar>
  </target>

  <target name="io-jar" id="apis-jar" depends="init,classes">
    <jar jarfile="jmolIO.jar">
      <fileset dir="${classes.dir}" >
	<include name="org/jmol/adapter/smarter/**" />
      </fileset>
      <fileset dir="." >
	<include name="LICENSE.txt"/>
      </fileset>
    </jar>
  </target>

  <target name="check.appletjars" id="check.appletjars">
    <uptodate property="appletjars.uptodate"
	      targetfile="${appletjars.dir}">
      <srcfiles dir="${lib.dir}"
		includes="jmolappletcdk.jar,vecmath1.2-1.14.jar"/>
    </uptodate>
  </target>
  
  <target name="appletjars" id="appletjars" depends="check.appletjars"
	  unless="appletjars.uptodate">
    <delete dir="${appletjars.dir}"/>
    <mkdir dir="${appletjars.dir}"/>
    <unjar dest="${appletjars.dir}" src="${lib.dir}/vecmath1.2-1.14.jar">
      <patternset>
	<include name="**/Point3f.class"/>
	<include name="**/Vector3f.class"/>
	<include name="**/Matrix3f.class"/>
	<include name="**/Matrix4f.class"/>
	<include name="**/AxisAngle4f.class"/>
	<include name="**/Quat4f.class"/>
	<include name="**/Point3i.class"/>
	<!-- the following are dependencies of the classes above -->
	<include name="**/Tuple3i.class"/>
	<include name="**/Tuple3f.class"/>
	<include name="**/Tuple4f.class"/>
	<include name="**/Vector4f.class"/>
	<include name="**/Tuple3d.class"/>
	<include name="**/Tuple4d.class"/>
	<include name="**/Vector3d.class"/>
	<include name="**/Quat4d.class"/>
	<include name="**/Point4f.class"/>
	<include name="**/Point3d.class"/>
	<include name="**/Point4d.class"/>
	<include name="**/Tuple2d.class"/>
	<include name="**/Point2d.class"/>
	<include name="**/Matrix3d.class"/>
	<include name="**/SingularMatrixException.class"/>
      </patternset>
    </unjar>

  </target>

  <target name="applet-jar" id="applet-jar"
	  depends="applet-classes,appletjars">
    <jar jarfile="JmolApplet.jar"
	 manifest="manifest/application.txt" index="true" >
      <fileset dir="${applet.classes.dir}" >
	<include name="**/*" />
      </fileset>
      <fileset dir="${appletjars.dir}" includes="**/*"/>
    </jar>

    <jar jarfile="JmolApplet1.jar" manifest="manifest/applet1.txt" >
      <fileset dir="${applet.classes.dir}">
	<include name="org/jmol/api/**" />
	<exclude name="org/jmol/api/JmolAppletInterface.class" />
	<include name="org/jmol/applet/**" />
      </fileset>
    </jar>

    <jar jarfile="JmolApplet2.jar" manifest="manifest/applet2.txt" >
      <!-- javax/vecmath -->
      <fileset dir="${appletjars.dir}" includes="**/*"/>
    </jar>

    <jar jarfile="JmolApplet3.jar" manifest="manifest/applet3.txt" >
      <fileset dir="${applet.classes.dir}">
	<include name="org/jmol/g3d/**" />
      </fileset>
    </jar>

    <jar jarfile="JmolApplet4.jar" manifest="manifest/applet4.txt" >
      <fileset dir="${applet.classes.dir}">
	<include name="org/jmol/adapter/smarter/**" />
      </fileset>
    </jar>

    <jar jarfile="JmolApplet5.jar" manifest="manifest/applet5.txt" >
      <fileset dir="${applet.classes.dir}">
	<include name="org/openscience/jmol/**" />
      </fileset>
    </jar>

    <jar jarfile="JmolApplet6.jar" manifest="manifest/applet6.txt" >
      <fileset dir="${applet.classes.dir}">
	<include name="org/jmol/viewer/**" />
      </fileset>
    </jar>

    <jar jarfile="JmolApplet0.jar" manifest="manifest/applet0.txt"
	 index="true" >
      <fileset dir="${applet.classes.dir}">
	<include name="org/jmol/appletwrapper/*" />
	<include name="JmolApplet*.class" />
	<include name="jmol75x29x8.gif" />
	<include name="org/jmol/api/JmolAppletInterface.class" />
      </fileset>
      <indexjars>
	<pathelement path="JmolApplet1.jar" />
	<pathelement path="JmolApplet2.jar" />
	<pathelement path="JmolApplet3.jar" />
	<pathelement path="JmolApplet4.jar" />
      </indexjars>
    </jar>

  </target>

  <target name="dist" id="dist" depends="doc,main">
    <!-- first build binary distribution -->
    <delete dir="build/dist/jmol-${version}"/>
    <mkdir dir="build/dist/jmol-${version}"/>
    <copy todir="build/dist/jmol-${version}" >
      <fileset dir=".">
	<include name="Jmol.jar" />
	<include name="JmolApplet.jar" />
	<include name="jmol" />
	<include name="jmol.sh" />
	<include name="jmol.mac" />
	<include name="jmol.bat" />
	<include name="*.txt" />
      </fileset>
    </copy>
    <chmod perm="ugo+rx">
      <fileset dir="build/dist/jmol-${version}">
	<include name="jmol"/>
	<include name="jmol.sh"/>
	<include name="jmol.bat"/>
      </fileset>
    </chmod>

    <copy todir="build/dist/jmol-${version}" >
      <fileset dir="./appletweb">
	<include name="Jmol.js" />
      </fileset>
    </copy>

   <!--
    zip distributions to not retain file permissions
    <zip zipfile="build/dist/jmol-${version}-binary.zip" basedir="build/dist"
	 includes="jmol-${version}/**" />
    -->

    <tar tarfile="build/dist/jmol-${version}-binary.tar.gz"
	 compression="gzip" >
      <tarfileset dir="build/dist"
		  excludes="*/jmol,*/jmol.sh"
		  includes="jmol-${version}/**" />
      <tarfileset dir="build/dist"
		  mode="755"
		  includes="*/jmol,*/jmol.sh" />
    </tar>

    <!-- then build source distribution -->

    <copy todir="build/dist/jmol-${version}" >
      <fileset dir=".">
	<include name="applet.classes" />
	<include name="build.xml" />
      </fileset>
    </copy>

    <copy todir="build/dist/jmol-${version}/src" >
      <fileset dir="src">
	<exclude name="**/CVS"/>
      </fileset>
    </copy>

    <copy todir="build/dist/jmol-${version}/${lib.dir}" >
      <fileset dir="${lib.dir}">
	<exclude name="**/CVS"/>
      </fileset>
    </copy>

    <copy todir="build/dist/jmol-${version}/${plugin.dir}" >
      <fileset dir="${plugin.dir}">
	<exclude name="**/CVS"/>
      </fileset>
    </copy>

    <copy todir="build/dist/jmol-${version}/appletweb" >
      <fileset dir="appletweb">
	<exclude name="**/CVS"/>
      </fileset>
    </copy>

    <copy todir="build/dist/jmol-${version}/doc" >
      <fileset dir="doc">
	<exclude name="**/CVS"/>
      </fileset>
    </copy>

    <copy todir="build/dist/jmol-${version}/samples" >
      <fileset dir="samples">
	<exclude name="**/CVS"/>
      </fileset>
    </copy>

    <copy   file="build/doc/JmolDevelopersGuide.html"
	    tofile="build/dist/jmol-${version}/doc/JmolDevelopersGuide.html" />
    <copy   file="build/doc/JmolHistory/ChangeLog.html"
	    tofile="build/dist/jmol-${version}/ChangeLog.html" />
    <copy todir="build/dist/jmol-${version}/doc/JmolUserGuide">
      <fileset dir="build/doc/JmolUserGuide">
	<include name="**/*.html" />
      </fileset>
    </copy>
    <copy   file="build/doc/JmolAppletGuide.html"
	    tofile="build/dist/jmol-${version}/doc/JmolAppletGuide.html" />

<!--
    zip distributions to not retain file permissions
    <zip zipfile="build/dist/jmol-${version}-full.zip" basedir="build/dist"
	 includes="jmol-${version}/**" />
    -->

    <tar tarfile="build/dist/jmol-${version}-full.tar.gz"
	 compression="gzip" >
      <tarfileset dir="build/dist"
		  excludes="*/jmol,*/jmol.sh"
		  includes="jmol-${version}/**" />
      <tarfileset dir="build/dist"
		  mode="755"
		  includes="*/jmol,*/jmol.sh" />
    </tar>
  </target>

  <target name="check.jws" id="check.jws" depends="setup" unless="keystore.present" >
    <echo message="Keystore '${keystore.name}' not found." />
    <echo message="Please set with the argument '-Dkeystore.name=file'." />
    <antcall target="initFailure" />
  </target>

  <target name="dist-jws" id="dist-jws" depends="check.jws,dist" >
    <copy todir="build/dist/jmol-jws-${version}" >
      <fileset dir="src">
	<include name="jmol.jnlp" />
      </fileset>
    </copy>
    <mkdir dir="build/dist/jmol-jws-${version}/${lib.dir}" />
    <copy todir="build/dist/jmol-jws-${version}/${lib.dir}" >
      <fileset dir="${lib.dir}">
	<include name="*.jar" />
	<exclude name="junit.jar" />
	<exclude name="saxon.jar" />
      </fileset>
    </copy>
    <mkdir dir="build/dist/jmol-jws-${version}/images" />
    <copy todir="build/dist/jmol-jws-${version}/images" flatten="yes" >
      <fileset dir="src">
	<include name="**/icon.jpg" />
      </fileset>
    </copy>
    <ant antfile="../../../build.xml" dir="build/dist/jmol-jws-${version}"
	 target="internal-dist-jws-sign" />
  </target>
  
  <!--
      This target should be only used internally within the build.xml. It is a
      workaround for a bugs in the fileset feature of the signjar task. See bugs
      5230 and 6988.
  -->
  <target name="internal-dist-jws-sign" id="internal-dist-jws-sign">
    <signjar alias="${keystore.alias}" 
	     storepass="${keystore.password}" 
	     keystore="${keystore.name}" >
      <fileset dir="../jmol-jws-${version}">
	<include name="**/*.jar" />
	<exclude name="**/.AppleDouble/**" />
      </fileset>
    </signjar>
  </target>
  

  <target name="clean" id="clean">
    <delete dir="${classes.dir}"/>
    <delete dir="${applet.classes.dir}"/>
    <delete dir="${tests.classes.dir}"/>
    <delete dir="${appjars.dir}"/>
    <delete dir="${appletjars.dir}"/>
    <delete>
      <fileset dir=".">
	<include name="Jmol.jar" />
	<include name="JmolApplet.jar" />
      </fileset>
    </delete>
  </target>

  <target name="spotless" id="spotless" depends="clean">
    <delete dir="build"/>
    <delete dir="${javadoc.dir}"/>
    <delete dir="packaging/rpm/dist"/>
  </target>
  
  <target name="run" id="run" depends="main">
    <java fork="true" jar="Jmol.jar" />
  </target>

  <!-- ********************************
       Documentation Targets
       ******************************** -->
  <target name="doc" id="doc"
	  depends="jmolGuide,jmolDevelopersGuide,jmolAppletGuide,jmolHistory,javadoc"/>
  
  <target name="initdoc" depends="init,check.docbook-xml,check.docbook-xsl,check.xsl" />
  
  <target name="check.docbook-xsl" depends="setup" unless="docbook-xsl.uptodate" >
    <delete dir="build/${docbook-xsl}" />
    <mkdir dir="build/${docbook-xsl}" />
    <untar src="doc/${docbook-xsl}.tar.gz" dest="build"
	   compression="gzip" />
  </target>

  <target name="check.docbook-xml" depends="setup" unless="docbook-xml.uptodate" >
    <delete dir="build/docbook-xml" />
    <mkdir dir="build/docbook-xml" />
    <unzip src="doc/${docbook-xml}.zip" dest="build/docbook-xml" />
  </target>

  <target name="check.xsl" depends="setup" unless="xsl.available" >
    <echo message="XSLT class 'com.icl.saxon.StyleSheet' not found." />
    <echo message="Note that the documentation is CANNOT generated now." />
  </target>

  <target name="javadoc" depends="initdoc" unless="javadoc.uptodate">
    <mkdir dir="${javadoc.dir}"/>
    <javadoc destdir="${javadoc.dir}" sourcepath="src"
	     private="true"
	     packagenames="org.openscience.*,org.jmol.*">
      <classpath refid="project.class.path" />
    </javadoc>
  </target>

  <target name="jmolGuide" id="jmolGuide" depends="initdoc"
	  unless="jmolGuide.uptodate" >
    <echo message="Generating user's guide" />
    <mkdir dir="build/doc/JmolUserGuide" />
    <java fork="true" dir="build/doc/JmolUserGuide"
	  classname="com.icl.saxon.StyleSheet"
	  classpath="${lib.dir}/saxon.jar" >
      <jvmarg value="${proxyHost}" />
      <jvmarg value="${proxyPort}" />
      <arg value="../../../doc/source/JmolGuide.docbook.xml" />
      <arg value="../../${docbook-xsl}/html/chunk.xsl" />
    </java>
    <echo message="Generating user's guide (fr)" />
    <mkdir dir="build/doc/JmolUserGuide_fr" />
    <java fork="true" dir="build/doc/JmolUserGuide_fr"
	  classname="com.icl.saxon.StyleSheet"
	  classpath="${lib.dir}/saxon.jar" >
      <jvmarg value="${proxyHost}" />
      <jvmarg value="${proxyPort}" />
      <arg value="../../../doc/source/JmolGuide_fr.docbook.xml" />
      <arg value="../../${docbook-xsl}/html/chunk.xsl" />
    </java>
  </target>

  <target name="jmolHistory" id="jmolHistory"
	  depends="initdoc" unless="jmolHistory.uptodate" >
    <echo message="Generating history of changes" />
    <mkdir dir="build/doc/JmolHistory" />
    <java fork="true" dir="build/doc/JmolHistory"
	  classname="com.icl.saxon.StyleSheet"
	  classpath="${lib.dir}/saxon.jar" >
      <arg value="-o" />
      <arg value="ChangeLog.html" />
      <arg value="../../../doc/source/JmolHistory.xml" />
      <arg value="../../../doc/source/JmolHistoryToHtml.xsl" />
    </java>
    <echo message="Generating history of changes (fr)" />
    <java fork="true" dir="build/doc/JmolHistory"
	  classname="com.icl.saxon.StyleSheet"
	  classpath="${lib.dir}/saxon.jar" >
      <arg value="-o" />
      <arg value="ChangeLog_fr.html" />
      <arg value="../../../doc/source/JmolHistory_fr.xml" />
      <arg value="../../../doc/source/JmolHistoryToHtml.xsl" />
      <arg value="lang=fr" />
    </java>
  </target>

  <target name="jmolDevelopersGuide" id="jmolDevelopersGuide"
	  depends="initdoc" unless="jmolDevelopersGuide.uptodate" >
    <echo message="Generating developer's guide" />
    <java fork="true" dir="build/doc"
	  classname="com.icl.saxon.StyleSheet"
	  classpath="${lib.dir}/saxon.jar" >
      <arg value="-o" />
      <arg value="JmolDevelopersGuide.html" />
      <arg value="../../doc/source/JmolDevelopersGuide.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
    <echo message="Generating developer's guide (fr)" />
    <java fork="true" dir="build/doc"
	  classname="com.icl.saxon.StyleSheet"
	  classpath="${lib.dir}/saxon.jar" >
      <arg value="-o" />
      <arg value="JmolDevelopersGuide_fr.html" />
      <arg value="../../doc/source/JmolDevelopersGuide_fr.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
  </target>

  <target name="jmolAppletGuide" id="jmolAppletGuide" depends="initdoc"
	  unless="jmolAppletGuide.uptodate" >
    <echo message="Generating applet guide" />
    <java fork="true" dir="build/doc"
	  classname="com.icl.saxon.StyleSheet"
	  classpath="${lib.dir}/saxon.jar" >
      <arg value="-o" />
      <arg value="JmolAppletGuide.html" />
      <arg value="../../doc/source/JmolAppletGuide.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
    <echo message="Generating applet guide (fr)" />
    <java fork="true" dir="build/doc"
	  classname="com.icl.saxon.StyleSheet"
	  classpath="${lib.dir}/saxon.jar" >
      <arg value="-o" />
      <arg value="JmolAppletGuide_fr.html" />
      <arg value="../../doc/source/JmolAppletGuide_fr.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
  </target>

</project>
