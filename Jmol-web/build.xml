<project default="html" basedir=".">

  <!-- Contributions -->
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="./ant-contrib.jar"/>
    </classpath>
  </taskdef>

  <property name="version" value="10.2" />
  <property name="jmol-doc-dir" value="../Jmol" />
  <property name="doc.dir" value="source/doc" />
  <property name="build.dir" value="build" />
  <property name="build.html" value="${build.dir}/html" />
  <property name="all.languages" value="de,en,es,et,fr,hu,it,nl,pt,pt_BR,ro" />

  <target name="clean">
    <delete dir="${build.dir}"/>
  </target>

  <target name="spotless" depends="clean">
  </target>

  <!-- Building web site -->
  <target name="html" depends="clean" >
  	
  	<!-- Directory creation -->
    <mkdir    dir="${doc.dir}/images"/>
    <mkdir    dir="${build.html}"/>

    <!-- Copy files from Jmol history -->
  	<copy todir="${doc.dir}/changes" overwrite="yes">
      <fileset dir="${jmol-doc-dir}/doc/source/history" includes="**/*"/>
    </copy>

    <!-- Generate index html files for each language -->
    <for list="${all.languages}" delimiter="," param="current.language">
      <sequential>
        <antcall target="html_lang">
          <param name="lang_value" value="@{current.language}"/>
        </antcall>
      </sequential>
    </for>
  	
    <!-- Copy other files -->
    <copy todir="${build.html}" overwrite="yes"> 
      <fileset dir="${doc.dir}" includes="license.txt,document.dtd"/>
    </copy>
    <copy todir="${build.html}" overwrite="yes">
      <fileset dir="${doc.dir}"
               excludes="**/*.xml,**/*.xsl,**/*~,**/cache.properties"/>
    </copy>
  	<copy todir="${build.html}/fah" overwrite="yes"
  		  file="${doc.dir}/fah/fah-projects.xml" />

    <!-- Deal with _index.html files -->
    <echo message="Copying _index.html files"/>
    <for param="current.dir">
      <dirset dir="${build.html}"/>
      <sequential>
        <if>
          <available file="@{current.dir}/_index.html"/>
          <then>
            <for list="${all.languages}" delimiter="," param="current.language">
              <sequential>
                <if>
                  <available file="@{current.dir}/messages.@{current.language}.js"/>
                  <then>
                    <copy todir="@{current.dir}" overwrite="yes">
                      <fileset dir="@{current.dir}" includes="_index.html"/>
                      <mapper type="glob" from="_index.html" to="index.@{current.language}.html"/>
                    </copy>
                    <replace dir="@{current.dir}" includes="index.@{current.language}.html">
                      <replacefilter token="$$CURRENT_LANGUAGE$$" value="@{current.language}"/>
                    </replace>
                  </then>
                </if>
              </sequential>
            </for>
            <delete file="@{current.dir}/_index.html"/>
          </then>
        </if>
      </sequential>
    </for>

    <!-- Copy files from Jmol docs -->
  	<copy todir="${build.html}/docs" overwrite="yes">
      <fileset dir="${jmol-doc-dir}/build/doc" includes="**/*"/>
    </copy>

    <!-- Replace content of files with variables -->
    <replace dir="${build.html}" includes="**/*.html">
      <replacefilter token="$$VERSION$$" value="${version}"/>
    </replace>

    <!-- Use Prerelease version for Jmol-fah
    <replace dir="${build.html}/fah" includes="*.html">
      <replacefilter token="[root]/jmol" value="../jmolPrerelease" />
    </replace> -->

  	<!-- Create JavaScript for Jmol-fah projects -->
    <style
      style="${doc.dir}/fah/createProjectList.xsl"
      in="${doc.dir}/fah/fah-projects.xml"
      out="${build.html}/fah/createProjectList.js">
    </style>

  	<!-- Create list of missing Jmol-fah projects -->
  	<style
  	  style="${doc.dir}/fah/createMissingProjectList.xsl"
      in="${doc.dir}/fah/fah-projects.xml"
  	  out="${build.html}/fah/missingProjects.txt">
  	</style>

  	<!-- Replace paths -->
    <replace dir="${build.html}" includes="*.html">
      <replacefilter token="[images]"   value="images" />
      <replacefilter token="[root]"     value="." />
      <replacefilter token="[codebase]" value="jmol" />
    </replace>
    <replace dir="${build.html}" includes="*/*.html">
      <replacefilter token="[images]"   value="../images" />
      <replacefilter token="[root]"     value=".." />
      <replacefilter token="[codebase]" value="../jmol" />
    </replace>

    <!-- Manage language flags -->
    <echo message="Generating flags for available languages..."/>
    <for param="current.dir">
      <dirset dir="${build.html}"/>
      <sequential>
        <for list="${all.languages}" delimiter="," param="current.language">
          <sequential>
            <if>
              <available file="@{current.dir}/index.@{current.language}.html"/>
              <then>
                <replaceregexp match='&lt;!-- &lt;flag lang="@{current.language}"&gt;(.*)&lt;/flag&gt; --&gt;'
                               replace='\1' flags='g'>
                  <fileset dir="@{current.dir}" includes="index.*.html"/>
                </replaceregexp>
              </then>
              <else>
                <replaceregexp match='&lt;!-- &lt;flag lang="@{current.language}"&gt;(.*)&lt;/flag&gt; --&gt;'
                               replace='&lt;!-- \1 --&gt;' flags='g'>
                  <fileset dir="@{current.dir}" includes="index.*.html"/>
                </replaceregexp>
              </else>
          	</if>
          </sequential>
      	</for>
      </sequential>
    </for>

  	<!-- Modify access rights -->
    <chmod perm="ug=rw,o=r" dir="${build.html}" includes="**/*" />
  </target>

  <!-- Language dependent target -->
  <target name="html_lang">

    <!-- Generate index.<lang>.html files -->
    <echo message="Generating ${lang_value} html files..."/>

    <style
      basedir="${doc.dir}"
      destdir="${build.html}"
      style="${doc.dir}/style.xsl"
      includes="**/index_${lang_value}.xml">
      <mapper type="glob" from="*_${lang_value}.xml" to="*.${lang_value}.html"/>
      <param name="lang" expression="${lang_value}"/>
      <param name="project_xml" expression="project_${lang_value}.xml"/>
    </style>

  </target>

</project>
