<!DOCTYPE html 
     PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
     "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Jmol Interactive Examples -- New Features</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="new.css" />
<script type="text/javascript" src="Jmol-new.js"></script>
<script type="text/javascript" src="new.js"></script>
<script type="text/javascript">
//<![CDATA[
title="ATOMS";model="naphthalene.smol;rotate x -90 "

docsearch = document.location.search.substring(1)
if(docsearch.indexOf("model=")>=0)model=unescape(docsearch.split("model=")[1].split("&")[0])

//messagecallback=""
//animcallback=""
//pickcallback=""
//	loadstructcallback=""

delayms = 100; delayms0 = 1000000


Callbacks=new Array("-atomPicked","fileLoaded","fileLoadError","-frameChanged","-measurePending","-measureCompleted","-measurePicked","-scriptStarted","-scriptEcho","scriptStatus","scriptError","scriptMessage", "scriptTerminated","-userAction","-viewerRefreshed","-newOrientation")

function getModelSelect(){
 return ""
 var sout="<select id=modellist onClick=loadModel(value) onkeyup=\"setTimeout('loadModel()',100)\"><option value='0'>Select a model</option>"
 for (var i=1;i<Models.length;i++){
  sout+="\n<option value='"+i+"'>"+Models[i]+"</option>"
 }
 sout+="</select>"
 return sout
}

function loadModel(value){
 if (arguments.length==0) {
   d = document.getElementById("modellist")
   if(!d)return
   value = d[d.selectedIndex].value
 }
 var i = parseInt(""+value)
 if (i<1)return
 showscript(0,0,"load mol/"+Models[i]+"; polyhedra bonds (not carbon) collapsed edges") 
}


function getCheckList(){
 var s=""
 var skey=""
 var ischecked=0
 for(var i=0;i<Callbacks.length;i++){
	skey=Callbacks[i]
	ischecked=(skey.charAt(0)!="-")
	Callbacks[i]=skey=skey.replace(/\-/,"")
	s+=" <label><input type=checkbox id='"+skey+"'"+(ischecked?" checked=1":"")+">"+skey+"</label>"
	if((i+1)%4==0)s+="<br>"
 }
 s+=" <a href=javascript:setOptions(1)>all</a> <a href=javascript:setOptions(0)>none</a> "
 return s
}

function getCallbackOptions(){
 var s="monitoring:"
 for(var i=0;i<Callbacks.length;i++)if(document.getElementById(Callbacks[i]).checked)s+=Callbacks[i]
 return s
}


function setOptions(all_or_none){
 for(var i=0;i<Callbacks.length;i++)document.getElementById(Callbacks[i]).checked = all_or_none
}

Scripts=new Array(" "
,' This file illustrates development in Jmol through Version 10.3. See also <a href=../examples-11/new.htm>Version 11.0</a>' 


	,'### Spartan input file reading ###'
	,'load naphthalene.smol;rotate x 80'
	,'load (-)-quinine.smol'
	,'### CrystalMaker file reading ###'
	,'load example.cmdf #shelx variant for CrystalMaker'
	,'load 6063.res     #standard shelx'
	,'set showUnitCell on'
	,'set showUnitCell off'
	,'### set labelsFront ON/OFF ###'
	,'labels on;spin on'
	,'set labelsFront on'
	,'set labelsFront off'
	,'labels off;spin off'

/*
	,'### set pickingStyle ###'
	,'load 1crn.pdb;select none;set display selected;set picking group'
	,'#using one of the options below, now start selecting atoms'
	,'set pickingStyle chime # default'
	,'#chime style: '
	,'# left-click toggles that group selected or not selected'
	,'set pickingStyle rasmol # see below'
	,'#rasmol style: '
	,'# left-click selects just that group'
	,'# shift-left-click toggles selection'
	,'set pickingStyle pfaat # see below'
	,'#pfaat style: '
	,'# left-click selects just that group, like rasmol'
	,'# shift-left-click toggles selection'
	,'# alt-left-click appends to selection'
	,'# alt-shift-left-click removes from selection'
	,'# left-click off model clears selection (select none)'
*/
	,'### bug fixes ###'
	,'# partial bond wireframe/color manipulation added'
	,'load naphthalene.smol;rotate x 80'
	,'connect 2.5 (hydrogen) (hydrogen) partial'
	,'select *;color bonds blue;wireframe 0.1'
	,'connect 2.5 (hydrogen) (hydrogen) hbond'
	,'select *;color bonds yellow;wireframe 0.2'
	,'select *;color hbonds white;hbonds 0.15'
	,'select bondcount=3;color red'
	,'connect 2.5 (hydrogen) (hydrogen) partialDouble'
	,'select bondcount=3;color red;wireframe 0.05'
	,'connect 2.5 (hydrogen) (hydrogen) partialDouble delete'
	,'select bondcount=3;color green;wireframe 0.2'
	,'connect 2.5 (hydrogen) (carbon and atomno < 5) partial'
	,'connect 2.5 (hydrogen) (carbon) partial delete'
	,'# measurements not updating in an open table in APP'


)
remarks=""
//]]>

what="visible"
whatp="centerInfo"
whatm=""

function showoutput(s){ if(!s) s=document.getElementById("output").value; dowritenew("<pre>"+s+"</pre>") };function oldshowoutput(){
 dowritenew("<pre>"+document.getElementById("output").value+"</pre>")
}

function dotest(iwhat){
 if(iwhat!=3)monitoron=false
 var s=""
 var sJSON=""
 var info=""
 var sinfo=""
 var sparam=""
 var str=""
 if(iwhat==-1){
   sinfo="appletInfo"
 }else if(iwhat==-2){
   sinfo="animationInfo"
 }else if(iwhat==0){
   str="fileName"
 }else if(iwhat==1){
   str="fileHeader"
   info = jmolGetPropertyAsString(sinfo)
 }else if(iwhat==2){
   str="fileContents"
 }else if(iwhat==3){
   sinfo="orientationInfo"
 }else if(iwhat==3.2){
   sinfo="transformInfo"
 }else if(iwhat==3.3){
   sinfo="centerInfo"
 }else if(iwhat==3.4){
   sinfo="boundboxInfo"
 }else if(iwhat==3.5){
   sinfo="zoomInfo"
 }else if(iwhat==4){
   sinfo="modelInfo"
 }else if(iwhat==4.2){
   sparam="PROMPT"
   sinfo="polymerInfo"
 }else if(iwhat==4.3){
   sparam="PROMPT"
   sinfo="chainInfo"
 }else if(iwhat==4.4){
   sinfo="shapeInfo"
 }else if(iwhat==4.5){
   sparam="visible"
   sinfo="stateInfo"
 }else if(iwhat==7){
   sparam="PROMPT"
   sinfo="bondInfo"
 }else if(iwhat==8){
   sparam="PROMPT"
   sinfo="atomInfo"
 }else if(iwhat==8.1){
   sparam="PROMPT"
   sinfo="atomList"
 }else if(iwhat==9){
   info = jmolGetPropertyAsArray("orientationInfo")
   s="load "+jmolGetPropertyAsString("fileName")+";"+info.moveTo
   document.getElementById("cmd").value=s
   jmolScript(s)
 }else if(iwhat==10){
   s=prompt("enter an atom expression",what)
   if(!s)return
   what=s
   s = jmolGetPropertyAsString("extractModel",what)
   var A=jmolGetPropertyAsArray("orientationInfo")
   showoutput(s);   jmolLoadInlineScript(s,A.moveTo)
 }else if(iwhat==11){
   whatm=getCallbackOptions()
   var A=jmolGetStatus(whatm)
   parseMessages(A)
   setTimeout("dotest(11)",delayms)
   return
 }
 if(str!=""){
   s=jmolGetPropertyAsString(str)
 }else if(sinfo!=""){
   if(sparam == "PROMPT"){
     s=prompt("enter an atom expression",what)
     if(!s)return
     what=s
     sparam=what
   }
   if(document.getElementById("idecode").checked){
	s=jmolGetPropertyAsArray(sinfo,sparam)
	s=_jmolEnumerateObject(s,sinfo)
   }else{
	s=jmolGetPropertyAsJSON(sinfo,sparam)
   }
 }
 if(s!="")document.getElementById("output").value=s
}

function parseMessages(A){
 if(!A)return
 var s=""
 for(var i=A.length-1;i>=0;i--){
	s=A[i][3]+"\n"+s
	showmsg("msg",A[i])
 }
 document.getElementById("output").value=s
}

monitoron=0
function domonitor(isiter){
  if(!isiter)monitoron=!monitoron
  if(!monitoron)return
  dotest(3)
  setTimeout("domonitor(1)",delayms)  
}

</script>
</head>
<body onload = "setTimeout('dotest(11)',delayms0)">
<script type="text/javascript">showpage(0)</script></body>
</html>
