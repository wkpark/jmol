<?xml version="1.0"?>
<!DOCTYPE somethingOrAnything [
<!ENTITY example01 SYSTEM "example01.xml" >
<!ENTITY example02 SYSTEM "example02.xml" >
<!ENTITY example03 SYSTEM "example03.xml" >
<!ENTITY example04 SYSTEM "example04.xml" >
<!ENTITY example05 SYSTEM "example05.xml" >
<!ENTITY example06 SYSTEM "example06.xml" >
<!ENTITY example07 SYSTEM "example07.xml" >
<!ENTITY example08 SYSTEM "example08.xml" >
<!ENTITY example09 SYSTEM "example09.xml" >
<!ENTITY example10 SYSTEM "example10.xml" >
<!ENTITY example11 SYSTEM "example11.xml" >
<!ENTITY example12 SYSTEM "example12.xml" >
<!ENTITY example13 SYSTEM "example13.xml" >
<!ENTITY example14 SYSTEM "example14.xml" >
]>
<document>
  <body>
    <title>Jmol Applet</title>
    
    <header>
      <p>
      Most of the functionality of the Jmol application is available
      for use as web browser applet. 
      </p>
      <p>
      We recommend that you read the
      <a href="../docs/JmolAppletGuide.html">Jmol Applet Guide</a> and the
      <a href="../docs/JmolUserGuide/">Jmol User Guide</a>
      for additional documentation about the applet and the
      Jmol scripting capabilities.
      </p>
    </header>

    <section title="Requirements">
      <p>The Jmol applet runs with the JVM 1.1 included with the most
      popular browsers on the Win32 platform.</p>
      <p>For other platforms and for better rendering quality we
      strongly recommend the latest Sun Java Virtual Machine,
      available through the
      <a href="http://java.sun.com/getjava/download.html">Java Plug-in</a>.
      </p>
    </section>

    <section title="Creating a Web page">
      <p>To use the Jmol applet in a web page, use the HTML standard
      &lt;APPLET&gt; element. The <b>code</b>, <b>archive</b>, <b>width</b>
      and <b>height</b> attributes are required. If you will be using
      JavaScript to drive the applet you will want to use the <b>name</b>
      attribute to uniquely identify the applet. You will also want to
      use the <b>mayscript</b> attribute to tell the browse to allow
      the applet to call JavaScript function. 
      </p>
      <p> The <b>param</b> element is used to pass parameters to the applet.
      You will normally specify the parameter with name="load" in order
      to load a molecule. You may also use JavaScript to dynamically
      load molecules into the applet. See the
      <a href="../scripting">Scripting</a> page for more information.

      <appletExample>&example01;</appletExample>
      </p>

      <p>The following applet displays a CML (Chemical Markup Language) file. 
      
      <appletExample>&example02;</appletExample>
      </p>

      <p>Some types of molecular data can be embedded in the HTML
      page. In this case, the data is passed as the value of the
      the "loadInline" parameter. The following applet displays the
      same molecule as above, but the CML data is
      embedded rather than in a file. Note, the single quotes around
      the PARAM VALUE attribute, combined with the double quotes in the
      CML source code.
      
      <appletExample>&example03;</appletExample>
      </p>

    <p>The use of &lt; characters in attribute values lead to invalid (X)HTML code, but all
    browsers seem to accept it. If valid X(HTML) code is important to you, you need to escape
    all &lt;'s with &amp;lt;, as in:

      <appletExample>&example04;</appletExample>
      </p>
    </section>

    <section title="Applet parameters">
      <p>The following parameters control the appearance and behavior of the
      applet. All parameter names and values are case insensitive.
      </p>
      <appletParameterList>
        <param name="load">
          A file relative to the HTML page on the same web server where
	  the applet was loaded from. The applet security manager prevents
	  the applet from accessing molecule files which are stored on
	  other web servers. 
        </param>
        
        <param name="loadInline">
          <p>CML data stored inline.</p>
	  <p>
	    <i>
	      Unfortunately, newline characters get ignored inside the
	      double quotes in HTML elements. Therefore, it is not possible
	      to pass other file formats using loadInline.
	      Jmol v10 will introduce a new technique for dealing with
	      this problem.
	    </i>
	  </p>
        </param>
        
        <param name="bgcolor">
          The specification of the background color. Acceptable parameter
	  values are consistent with HTML: a hash mark followed by a
	  hexadecimal color specification (#RRGGBB) or one of the sixteen
	  sRGB color names (black silver gray white maroon red purple
	  fuchsia green lime olive yellow navy blue teal aqua).
          <appletExample>&example05;</appletExample>
        </param>
        
        <param name="style">
	  <p>
	    <b><i>Note:</i> This parameter will be deprecated in Jmol v10. </b>
	  </p>
          The rendering style used for atoms and bonds.  One of:
          <ul>
            <li>shaded &lt;default&gt;</li>
            <li>wireframe</li>
	    <li>quickdraw <i>deprecated</i></li>
          </ul>
          <appletExample>&example06;</appletExample>
          <appletExample>&example07;</appletExample>
        </param>
        
        <param name="label">
	  <p>
	    <b><i>Note:</i> This parameter will be deprecated in Jmol v10. </b>
	  </p>
          The labels to display for atoms.  One of:
          <dl>
            <dt>none &lt;default&gt;</dt> <dd>do not display labels.</dd>
            <dt>symbol</dt> <dd>label atoms with their atomic symbol.</dd>
            <dt>number</dt> <dd>label atoms with their number.</dd>
          </dl>
          <appletExample>&example08;</appletExample>
          <appletExample>&example09;</appletExample>
        </param>
        
        <param name="wireframeRotation">
	  <b><i>Note:</i> This parameter will be deprecated in Jmol v10. </b>
          Whether or not to use the wireframe mode during rotations.
	  Improves rendering performance of large molecules. One of:
          <ul>
            <li>true</li>
            <li>false &lt;default&gt;</li>
          </ul>
        <appletExample>&example10;</appletExample>
</param>

        <param name="script">
	  Allows you to specify a script which is to be run when
	  the applet is loaded. Note that web browsers remove the newline
	  character from element values, even inside double quotes. Therefore,
	  you <i>must</i> separate script statements with a semicolon
	  character, even though they may be on multiple lines in your
	  HTML file.
        <appletExample>&example11;</appletExample>
</param>

      </appletParameterList>
    </section>
    
    <section title="Mouse gestures">
      <p>The following mouse actions control the applet:
        <ul>
          <li>Left Mouse Button -
	      rotates the molecule in x and y dimensions</li>
	  <li>Right Mouse Button -
	      &lt;reserved for future expansion&gt;</li>
          <li>Shift-Right Mouse Button -
	      horizontal movement of the mouse rotates the molecule
	      in the z dimension</li>
          <li>Ctrl-Right Mouse Button -
	      translates (moves) the molecule</li>
          <li>Shift-Left Mouse Button -
	      vertical movement of the mouse zooms in and out</li>
          <li>Ctrl-Left Mouse Button -
	      controls the slab functionality for slicing through
	      a molecule
	      [if enabled through scripting <b>set slab on</b>]</li>
        </ul>
      </p>
      <p>These mouse gestures were chosen to be compatible with the
      MDL Chime plug-in.
      </p>
    </section>

    <section title="Animation examples">
      <p>A carbon-cation rearrangement reaction

      <appletExample>&example12;</appletExample>
      </p>

      <p>Rotamers of ethane
      
      <appletExample>&example13;</appletExample>
      </p>
    </section>
    
    <section title="Examples with other file formats">
      <p>Aspirin in MDL mol file format
      
      <appletExample>&example14;</appletExample>
      </p>

      <p>The <a href="../scripting">Scripting</a> page demonstrates
        additional examples.
      </p>

    </section>

  </body>
</document>

