<html>
<head>
<title>Jmol Interactive Examples</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<link rel="stylesheet" type="text/css" href="styles.css" />
<script type="text/javascript" src="Jmol-11.js"></script>
<script type="text/javascript" src="new.js"></script>
<script type="text/javascript">

//logLevel=0  // 4 is standard ;1 gives fatal errors only; 2 gives all errors;
              // 3 gives errors and warnings; 4 gives errors, warnings and information; 5 adds debug.

//<![CDATA[
title="ATOMS";model='"quartz.cif" {1 1 1};set showunitcell on'
docsearch = document.location.search.substring(1)
if(docsearch.indexOf("model=")>=0)model=unescape(docsearch.split("model=")[1].split("&")[0])

latestVersion = '### Latest version: <a href=.>10.9.57</a> (9/11/2006) ###'

messagecallback="showmsg"
animcallback=""
pickcallback=""
loadstructcallback=""

delayms = 100; delayms0 = 1000
polling = false;

Callbacks=new Array("-atomPicked","-fileLoaded","-fileLoadError","-frameChanged","-measurePending","-measureCompleted","-measurePicked","-scriptStarted","-scriptEcho","-scriptStatus","-scriptError","-scriptMessage", "-scriptTerminated","-userAction","-viewerRefreshed","-newOrientation")

function getCheckList(){
 var s=""
 var skey=""
 var ischecked=0
 for(var i=0;i<Callbacks.length;i++){
	skey=Callbacks[i]
	ischecked=(skey.charAt(0)!="-")
	if(ischecked)polling=true;
	Callbacks[i]=skey=skey.replace(/\-/,"")
	s+=" <label><input type=checkbox onclick=getCallbackOptions() id='"+skey+"'"+(ischecked?" checked=1":"")+">"+skey+"</label>"
	if((i+1)%4==0)s+="<br>"
 }
 s+=" <a href=javascript:setOptions(1)>all</a> <a href=javascript:setOptions(0)>none</a> "
 return s
}

function getCallbackOptions(){
 var s=""
 for(var i=0;i<Callbacks.length;i++)if(document.getElementById(Callbacks[i]).checked)s+=Callbacks[i]
 var waspolling = polling
 polling = (s!="")
 if(polling && !waspolling)pollApplet()
 return "monitoring:"+s
}

function pollApplet(){
   whatm=getCallbackOptions()
   if(!polling){
	document.title = ""
	return
   }
   document.title = (new Date())
   var A=jmolGetStatus(whatm)
   parseMessages(A)
   if(polling)setTimeout("pollApplet()",delayms)
}

function setOptions(all_or_none){
 for(var i=0;i<Callbacks.length;i++)document.getElementById(Callbacks[i]).checked = all_or_none
 polling = (all_or_none == 1) 
}


function test1() {
 jmolSetAtomCoordRelative(Math.floor(Math.random()*6),Math.random()/5-0.1,Math.random()/5-0.1,Math.random()/5-0.1)
 jmolScriptWait("refresh")
}

function fire(i0,n){
 for(var i=0; i < n; i++) {
   //alert(Scripts[i0+i]);
   jmolScript(Scripts[i0+i]);
 }
}
Scripts=new Array(" "
,' This page can be used to experiment with Jmol Version 11 and its pre-release version 10.x.NN. <br>Comments? Suggestions? <a href=mailto:hansonr@stolaf.edu>Bob Hanson</a>'

,latestVersion

,'### updated <a target=_blank href=http://www.stolaf.edu/academics/chemapps/jmol/docs>documentation for soon-to-be-11.0</a>. <br />Take a look and see what is new. ###'

,'### applet help ###'
,'# Jmol 10.9.57 includes a "help" command.'
,'help'
,'help echo'

,'### translateSelected ###'
,'# Jmol 10.9.57 includes the ability to move atoms relative to each other.'
,'load "team0104a.ccdc.cif" {1 1 1};moveto 0  -689 -707 -161 145.1 60;'
,'select symop = 1;color white'
,'translateSelected {0 -1/1 0}'
,'translateSelected {0 1/1 0}'



,'### movable echo ###'
,'# Jmol 10.9.56 adds an infinite number of independent echo placements. Simply provide a unique name followed by the x and y positions for the upper left-hand corner of the label.'
,'set echo myecho 240 30;'
,'# Indicate new lines in multiple-line labels with a vertical bar'
,'echo a|quartz|crystal;'
,'# text alignment is given by "left", "right", or "center"'
,'set echo myecho right'
,'set echo myecho center'
,'set echo myecho left'
,'color echo yellow'
,'set echo myecho2 50 250'
,'echo from AMS'
,'color echo white'
,'font echo 18 serif italic'
,'set echo myecho2 250 250'
,'# Now you can turn labels off individually'
,'set echo myecho off'
,'set echo myecho2 off'
,'# The old "top", "middle", and "bottom" are simply special pre-defined locations. In these three special cases only, "left", "right", and "center" describe both the window placement and the text alignment.'
,'set echo top center'
,'echo top|center'
,'# You can redefine the locations for "top", "middle", and "bottom" if you want to.'
,'set echo top 200 300'


,'### space groups for mmCIF, XYZ, and MOL files ###'
,'# Jmol 10.9.55 extends spacegroup and unitcell capabilities to standard XYZ, mmCIF, and MOL files. Coordinates are not fractional in these files, so the presumption is that we have the final Cartesian coordinates, but we want to "reverse engineer" the system and see how that molecule packs in its crystal. For this we have to have some additional information of spacegroup and unitcell.'
,'load "caffeine.xyz" {1 1 2} spacegroup "P 4" unitcell {10 10 10 90 90 90}'

,'### space groups for PDB files ###'
,'# Jmol 10.9.54 adds the capability to explore space groups and molecular packing of proteins in PDB files. This opens the door also for the same using any Cartesian-coordinate file, provided unit cell and space group information are provided. At least for now it is possible with PDB files.'
,'load "1crn.pdb"'
,'load "1crn.pdb" {1 1 1}'
,'load "1crn.pdb" {1 2 1};select symop=1;color red'
,'load "1crn.pdb" {1 2 1} spacegroup "P 21:a"'
,'load "1crn.pdb" {1 2 1} spacegroup "P 21:b" # the real one ?'
,'load "1crn.pdb" {1 2 1} spacegroup "P 21:c"'
,'load "quartz.cif" {1 1 2};moveto 0.0 -999 38 -2 73.7;'
,'# You can also change the unit cell dimensions if you like:'
,'load "quartz.cif" {1 1 2} unitcell {6.00 6.00 6.00 90 90 120};moveto 0.0 -999 38 -2 73.7;'
,'# If you change both, change spacegroup first:'
,'load "quartz.cif" {1 1 2} spacegroup "P 32 2\'\'" unitcell {6.00 6.00 6.00 90 90 120};moveto 0.0 -999 38 -2 73.7;'
,'load "quartz.cif" {1 1 2} spacegroup "P 32 2\'\' (0 0 4)" unitcell {6.00 6.00 6.00 90 90 120};moveto 0.0 -999 38 -2 73.7;'


,'### set labelsGroup ###'
,'# Jmol 10.9.53 introduces <b>set labelsGroup</b>, which places the labels for atoms in proteins and nucleic acids just in front of their group, rather than in front of all atoms, as in <b>set labelsFront</b>.'
,'load 1crn.pdb;spacefill on;select *.CA;labels "%r";color labels group;'
,'set labelsGroup'
,'set labelsFront'
,'set labelsFront off;set labelsGroup off;'

,'### new data command ###'
,'# Jmol 10.9.52 introduces a general method of entering data into Jmol, mostly for future customizability options. The one option currently supported is "model" data, but any sort of line-based data can be introduced and later shown using the <b>show data</b> or <b>getProperty dataInfo</b> commands. The <b>data "model"</b> statement allows in-line entry of a file surrounded by additional script commands. See <a href=../index.htm?#data>the documentation</a> for details and an example.'

,'### new symop and specialPosition atom selection options, and label "%o" ###'
,'# Jmol 10.9.52 introduces <b>symop</b>, a means of selecting atoms based on which symmetry operator generated them.'
,'load "quartz.cif" {1 1 1}'
,'set display selected'
,'select symop=1'
,'select symop<3'
,'# To select just the original atoms before any symmetry was applied, use <b>select not symmetry</b>.'
,'select not symmetry'
,'# To select all special positions (positions that can be generated by more than one symmetry operation from the original set of atoms), use <b>select specialPosition</b>.'
,'select specialposition'
,'# To display the index of the symmetry operator that generated an atom, use %o in a label'
,'set display normal;select *;label "%o"'
,'# To display the operators in xyz notation, use <b>show symmetry</b>'
,'show symmetry'

,'### new space group capabilities ###'
,'# Jmol 10.9.51 adds the capability to read space group names (Hermann-Mauguin or <a href=http://cci.lbl.gov/sginfo/hall_symbols.html>Hall</a>) and from these to generate the set of operators. In the case of Hall symbols, this assignment is definitive; in the case of Hermann-Mauguin symbols, cell parameters are also used in order to identify the unique axis, but there still may be ambiguities in this case. The current implementation is for testing only -- some changes should be expected. To indicate 2", use a pair of single quotes: 2\'\'. In addition, you can supply a desired space group name with a file to specify that you want to override the space group indicated in the CIF file.' 
,'load "team0104a.ccdc.cif" {1 1 1}'
,'# without qualifiers, "show spacegroup" interprets the name of the spacegroup given in the file. Note that this may not be consistent with the operators used to calculate the atom positions if those are explicitly given in the CIF or RES file. Jmol will only use the space group name to generate operators if they are not otherwise given in the file.'
,'show spacegroup'
,'# Hermann-Mauguin symbols can be shown:' 
,'show spacegroup "Pmmn"'
,'# any arbitrary Hall symbol can be shown:'
,'show spacegroup "P 32 2\'\' (0 0 4)"'
,'# In 10.9.52 you can instuct Jmol to ignore CIF file-derived operators and force name-derived operator generation:'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "ignoreOperators"'
,'# In 10.9.52 you can load a file and script what spacegroup to use, overriding the spacegroup indicated in the file itself. No check is done to ensure that the chosen space group is compatible with the cell dimensions. The "space group" can just be a list of x,y,z operators.'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "Pmmm";rotate y 90; show spacegroup'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "P21/m";rotate y 90; show spacegroup'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "P21/c";rotate y 90; show spacegroup;centerAt absolute {1/2 1/2 1/2};set scale3d 6.0;'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "-x,y+1/2,-z+1/2";rotate y 90;;centerAt absolute {1/2 1/2 1/2};set scale3d 6.0;'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "-x,-y,-z";rotate y 90;centerAt absolute {1/2 1/2 1/2};set scale3d 6.0;'
,'load "team0104a.ccdc.cif" {1 1 1} spacegroup "-x+1/2,y,z+1/2";rotate y 90;centerAt absolute {1/2 1/2 1/2};set scale3d 6.0;'


,'### new dots behavior ###'
,'# in response to several users\' request, <b>dots</b> now functions on the selected atom set without turning off other dots. In addition, there are now two options, <b>set dotSurface TRUE|FALSE</b> and <b>set dotsSelectedOnly TRUE|FALSE</b>. The first of these, <b>set dotSurface</b> (default TRUE) indicates that we are to draw the dots with neighbors in mind, not rendering dots that would be "inside" another atom. If you turn dotSurface OFF, then dots are just spheres of dots symmetrically positioned around the selected atoms. Turn them on or off just like labels. The second, <b>set DotsSelectedOnly</b> (default FALSE) indicates whether or not to draw the dots only for the atoms that are currently "dots on". The idea here is that sometimes we might want dots to show a fragment of a surface (<b>set dotsSelectedOnly FALSE</b>) or to show a smooth curve around all currently dotted atoms (<b>set dotsSelectedOnly TRUE</b>). To see any effect with either of these, you need to do another <b>dots ON</b> or other related command.'
,'load caffeine.xyz;set dotSurface ON; set dotsSelectedOnly FALSE; dots +1.2'
,'select oxygen;dots off'
,'select *;dots off;'
,'select oxygen;set dotSurface OFF;dots 1.0'
,'dots off; select hydrogen;set dotSurface ON; set dotsSelectedOnly;dots 150%'

,'### cartoonRockets adjustment ###'
,'# cartoonRockets now more accurately reflect turn structure. No change was made to standard cartoons or rockets.'
,'load 1crn.pdb;restrict none;select *;set cartoonRockets;cartoons ON;'
,'rockets on;trace off;cartoons off;'
,'rockets off;trace off;cartoons on;'
,'rockets off;trace on;cartoons off;'

,'### adjusted hydrogen bond criteria ###'
,'# although Jmol uses the DSSP hydrogen bond calculation as described at <a target=_blank href=http://en.wikipedia.org/wiki/Secondary_structure>http://en.wikipedia.org/wiki/Secondary_structure</a>, there seems to be a flaw in this energy calculation that renders too many hydrogen bonds. I\'ve added the criteria that the N--H hydrogen must be closer than the N--H nitrogen to the carbon of C=O for a valid hydrogen bond to be claimed, and also that the H--O distance of the hydrogen bond itself must be less than 3.0 Angstroms. (2.0 is probably more realistic, but 3.0 allows for some slop.) The result of this is that it is possible that slightly fewer (but more realistic) hydrogen bonds will be displayed for PDB and mmCIF files. Note that if a file contains no indication of hydrogen bonds, then one must issue a <b>hbonds calculate</b> command first before any hydrogen bonds will display.'
,'load 1qys.pdb;restrict none;select *;cartoons on;'
,'hbonds calculate'


,'### new "mo TITLEFORMAT" ###'
,'# 10.x.46 introduces a means of customizing (or removing) the default listing of information that appears with a molecular orbital when using the MO command. See <a href=mo.htm>mo.htm</a>'

,'### "set defaultDirectory" and "set appletProxy" ###'
,'# 10.x.45 introduces dynamic setting of the default directory as well as the applet proxy server. Using <b>set defaultDirectory "directoryName"</b> you can change where files are coming from without moving the files all around. This should prove helpful to those of us who test pages on more than one server or hard drive. <br/><br/>Using <b>set appletProxy "serverURL"</b> you can set the URL that Jmol goes to in order to display files NOT from the applet\'s host. This requires specific code on the server side that takes a call such as "www.myserver.com?url=someother.server.com/myfile.xyz" and returns the file at someother.server.com/myfile.xyz.'


,'### dynamic callback setting ###'
,'# 10.x.44 introduces dynamic setting of JavaScript callback functions. Turn these off using "NONE"; set them to be a JavaScript alert using "alert".'
,'set hovercallback "alert" # Now hover over an atom.'
,'set hovercallback "none"; set messageCallback "alert"'
,'set pickcallback "alert"; set messagecallback "none" # Now click on an atom.'
,'# When a special picking mode is set (distance, angle, or torsion), the pick callback continues to indicate the individual atoms picked; the message callback function gets the final information.'
,'set pickcallback "alert"; set messagecallback "none"; set picking distance # Now click on pairs of atoms.'
,'set pickcallback "none"; set messagecallback "alert"; set picking distance # Now click on pairs of atoms.'
,'set pickcallback "none"; set messagecallback "showmsg" # the default function for this page'

,'### dynamic design of draw objects, including 3D arrows and curves<p>See <a href=draw.htm>draw.htm</a> ###'
,'# 10.x.44 introduces <b>set picking DRAW</b>, which allows you to change the positions of the vertices that define points, lines, planes, arrows, and curves. The command <b>show draw</b> then delivers the command that can be used in web pages to reproduce this set of vertices.'


,'### set cartoonRockets on <br><a href=mailto:hansonr@stolaf.edu>COMMENTS APPRECIATED</a>###'

,'# 10.x.42 tests an idea for displaying cartoons as rockets. The idea is to have a flag that can be set that renders cartoons in the form of rockets. The original rockets and cartoons are thus both still there.'
,'load 1bkx.pdb;restrict none;select *;cartoons on;color group; set picking center;'
,'set cartoonRockets on'
,'set cartoonRockets off'
,'# note that the rendering of the turns is not precisely the same as either cartoons or rockets, because we have to connect to both ends of a rocket, which are not in the same place as the ends of an alpha helix, and we have to connect to both ends of a sheet, which are not in the same place as the rectangular rocket arrows. I am not fully satisfied with this rendering.'
,'rockets off;cartoons on;set picking center'
,'rockets on;cartoons off;set picking center'

,'### new select/restrict options SITE and ELEMENT ###'
,'# Jmol 10.x.40 adds <b>select/restrict within(SITE,expression)</b>, <b>select/restrict within(ELEMENT,expression), <b>select/restrict site=n</b>, and <b>select/restrict element=n</b>. (This last is just for completeness sake. "select elemno=n" already exists.) These options are of particular use in the context of crystallography, where symmetry may generate several atoms with the same site but different cell position.'
,'load "quartz.cif" {3 3 3}; restrict cell=666;unitcell 666;zoom 300'
,'# This loads 3x3x3 = 27 unit cells. Note that without "and visible" all matching atoms are selected and that "and visible" should appear outside the "within()" phrase.'
,'select within(site,atomno=1) # 105 atoms selected.'
,'select within(site,atomno=1 and visible) # nothing selected, because atomno=1 is not visible'
,'select within(site,atomno=1) and visible;color green'
,'select site=2 and visible;color yellow'
,'frame next'
,'frame previous'

,'### new set picking SITE and set picking ELEMENT ###'
,'# Jmol 10.x.40 adds <b>set picking SITE</b> and <b>set picking ELEMENT</b>. In each case, all atoms that match the specified site and element <i>and are visible</i> are selected.'
,'load "maleic.cif" {2 1 1};unitcell 655;center visible;zoom 400;select none;set display selected'
,'select none;set picking ELEMENT # now start picking atoms'
,'select none;set picking SITE # now start picking atoms'
,'select none;set picking ON # normal picking'
,'set display normal # normal display'

,'### new "message" command ###'
,'# Jmol 10.x.39 adds <b>message</b> [text], which outputs text to the messageCallback function and also enters this text in the scriptStatus queue.'
,'load caffeine.xyz;color red;message This script is running;delay 5;color green;message this script is done;'

,'### Wavefunction Odyssey file viewer support ###'
,'# jmol 10.x.37 reads Wavefunction <a target=_blank href=http://www.wavefun.com/products/odyssey/odyssey.html>Odyssey</a> software.'
,'# In this first example, we load the file and generate hydrogen bonds'
,'load Water!Liquid.xodydata;connect 2.5 (oxygen) (hydrogen) hbond create;'
,'# "water" is now defined in a small-molecule context as H2O based on connectivity'
,'load ZnSO4!Solution.odydata;select water;spacefill off;wireframe 0.06;color white;'

,'### HoverCallback ###'
,'# Jmol 10.x.33 supports HoverCallback. When a user\'s mouse hovers over an atom, the function specified in jmolSetCallback("hovercallback","functionName") gets a call. The first parameter in the callback is the applet id. Second is a descriptive string indicating the atom\'s identity and xyz coordinates. Third is the atom\'s index (atomIndex), which can be used with <br /><br /><b>jmolGetPropertyAsArray("atomInfo")[atomIndex]</b><br /><br /> to get <a target=_blank href=http://www.stolaf.edu/people/hansonr/jmol/docs/atomInfo.txt>more detailed information</a> if desired. Hovercallback is active even if <b>hover OFF</b> has been executed. Thus, with <b>hover OFF</b> the user will not see any effect of hovering, while the web page can be made fully aware of it. The call to jmolSetCallback() must be made BEFORE the call to jmolAppet(). '

,'### AJAX-JS support ###'
,'# Jmol-11.js supports <a href="http://en.wikipedia.org/wiki/Ajax_%28programming%29" target=_blank>Asynchronous JavaScript</a>, allowing web developers to create pages that draw from any molecular data resource on the web. To use this service, nothing more than Jmol-11.js is require. No server-side application is needed. Currently the both of the two known AJAX-JS servers are supported -- one at St. Olaf College serving up RCSB biomolecular structures as well as just about any uncompressed structural model files anywhere on the web, and the American Mineralogical Society\'s AJAX mineral structure server at the University of Arizona.'

,'### <b>set scriptQueue ON</b> and quit/exit ###'
,'# Many people have reported issues with script commands running over each other. This problem is now largely solved. applet.jmolScript() and viewer.script() deliver scripts to a queue, and if that queue is turned on using <b>set scriptQueue ON</b>, they are properly sequenced. Thus, when the queue is turned on, each script waits for the previous to complete. This is NOT standard Jmol procedure for the reason that sometimes one needs one script to interrupt another, as, for example, when a <b>LOOP</b> command is involved. In that case, the only way to interrupt the looping script is with another script. So, to account for this issue, the roles of <b>quit</b> and <b>exit</b> have been expanded. <b>quit</b> or <b>exit</b> at the very beginning of a script command halts any <i>previous</i> still-running script and. Processing then continues with the second command on the line. Anywhere else in the command, <b>quit</b> and <b>exit</b> abort that script. In addition, <b>exit</b> clears the script queue of any remaining scripts, thus stopping all script processing.'
,'# Try this with the following commands to see how it works. Go ahead and click rapidly to start more than one script with and without the script queue being on.'
,'load caffeine.xyz'
,'set scriptQueue ON'
,'moveto 3 1 0 0 30 '
,'moveto 3 0 1 0 50'
,'moveto 3 0 0 1 80'
,'# Now try that again the "old" way:'
,'set scriptQueue OFF' 
,'moveto 3 1 0 0 30 '
,'moveto 3 0 1 0 50'
,'moveto 3 0 0 1 80'
,'set scriptQueue ON'
,'color red;delay 2; color green; loop 2'
,'# quit or exit at the beginning are the same thing'
,'quit'
,'exit'
,'quit; color blue;delay 2; color yellow; loop 2 # any previously running script will stop, and this script will be placed at the end of the queue'
,'color orange;delay 3; color white; delay 3; exit # start this one and then a few more; only this one will execute.'
,'set scriptQueue OFF' 

,'### super-simple solvent-accessible surface option using "spacefill"; new variable radius <b>dots</b> and new <b>geoSurface</b> command ###<br><img src=img/sasurface.jpg width=100 height=100>'
,'# The "solvent-accessible surface" is defined as an extension of the van der Waals radius by a set "solvent probe radius", commonly 1.2 or 1.4 Angstroms. This surface is now displayable simply using the <b>spacefill +1.2</b> command, where the +1.2 indicates "van der Waals radius plus 1.2 Angstroms'
,'load 1p84.cif;select not solvent;color yellow;spacefill +1.2;select solvent;spacefill 1.2;color red;spin y -10'
,'# This model has 18,207 atoms. What could be simpler?'
,'load caffeine.xyz'
,'spacefill 100%'
,'spacefill +1.2'
,'spacefill 1.2'
,'spacefill 25%'
,'spacefill off'
,'# The same works for dots. The <b>geoSurface</b> object just involves connecting the dots. Probably not so useful with <b>spacefill +12</b>, but it was there already in the code, undocumented, so I have enabled it.'
,'load caffeine.xyz'
,'dots 100%'
,'dots +1.2'
,'dots 1.2'
,'dots 25%'
,'dots off'
,'load 1crn.pdb;geosurface 100%'
,'geosurface +1.2'
,'geosurface off'

,'### new select within("[SEQUENCE]",(atom expression)) ###<br><img src=img/sequence.jpg width=100 height=100>'
,'# Jmol 10.x.30 adds the capability to select specific atoms within a specific peptide or nucleic acid sequence. The one-character group codes are used to specify the desired sequence.'
,'set display selected; load 1crn.pdb;color white;select within("CIII",*.ca);'
,'set display normal;load 114d.cif;spacefill off;color white;select within("TTAG",*);cartoon on; wireframe off;color red;select selected and *.P;set labelsFront;label %n;color labels yellow;moveto 1.0 -301 744 597 142.2;'

,'### new lcaoCartoon command<p>See <a href=lcao.htm>lcao.htm</a>. ###<br><img src=img/lcao.jpg width=100 height=100>'
,'# Jmol 10.x.29 adds the capability to draw LCAO "cartoon orbitals" at any hybridization-compatible atom very quickly without knowing anything about its orientation.'

,'### New <b>MO</b> command<p>See <a href=mo.htm>mo.htm</a> ###<br><img src=img/mocalc.jpg width=100 height=100><img src=img/webmo.jpg width=100 height=100>'
,'# 10.x.25 introduces a simple command that you can use to explore the molecular orbitals contained in a variety of file types. (New types added upon request.) The command allows for changing the cutoff value as well as the resolution of the surface, the colors, and the transparency. In addition, a plane can be specified, allowing for a slice through the orbital to be depicted.'
,'load "water-G03W.out";frame 2;center visible;moveto 1.0 -571 -817 -75 120.5;set axesmolecular;axes on'
,'mo 4'
,'mo cutoff 0.02'
,'mo cutoff 0.08'
,'mo color yellow purple'
,'mo color red blue'
,'mo resolution 3'
,'mo resolution 6'
,'mo resolution 10'
,'mo color red blue'
,'mo translucent'
,'mo next'
,'mo plane "xy"'
,'mo plane "xz"'
,'mo plane "yz"'
,'mo plane {1 1 1 0}'
,'mo noplane'
,'mo prev'

,'### Spartan .spartan file and Compound Document reader support ###'
,'# <a target=_blank href=http://www.wavefunction.com>Wavefunction</a>\'s Spartan native binary .spartan files can be read by Jmol starting with 10.x.22. These files are standard <a target=_blank href=http://sc.openoffice.org/compdocfileformat.pdf>Compound Document</a> file format (same as some versions of Microsoft Word and Excel, and OpenOffice files.) Jmol can read atoms, bonds, molecular orbitals, vibrational modes, charges, dipole moments, and a variety of other properties contained in these files.'
,'load methanol.spartan;getProperty "auxiliaryinfo"'
,'frame 1;mo cutoff 0.008 ; mo translucent'
,'mo 12'
,'mo next'
,'mo prev'
,'frame 2;vibration scale 0.1; vibration on'
,'frame next'
,'frame prev'
,'load ethene.spartan'
,'load "acetic%20acid.spartan"'

//,'load "test.cif" {3 3 3};restrict cell={2 2 2};set unitcell {1 1 1};define ~cations (silicon or copper or germanium or vanadium);define ~anions (oxygen);define ~nobonds (yttrium);color copper SpringGreen;color axes white;color unitcell white;center visible;connect delete;connect 2.2;connect (~anions) (~anions) delete;connect (~cations) (~cations) delete;connect (~nobonds) (*) delete;polyhedra delete;polyhedra bonds (~cations and (connected(3) or connected(4) or connected(5) or connected(6)) and visible);moveto 1.0 -971 195 138 78.9 225;'

//,'load "test.cif" {3 3 3};restrict cell={2 2 2};set unitcell {1 1 1};define ~cations (copper);define ~anions (oxygen);define ~nobonds (yttrium);color copper SpringGreen;color axes white;color unitcell white;center visible;connect delete;connect 2.2;connect (~anions) (~anions) delete;connect (~cations) (~cations) delete;connect (~nobonds) (*) delete;polyhedra delete;polyhedra bonds (~cations and (connected(4)) and visible);moveto 1.0 -971 195 138 78.9 225;'

//,'load "test.cif" {3 3 3};restrict cell={2 2 2};set unitcell {1 1 1};define ~cations (copper);define ~anions (oxygen);define ~nobonds (yttrium);color copper SpringGreen;color axes white;color unitcell white;center visible;connect delete;connect 2.2;connect (~anions) (~anions) delete;connect (~cations) (~cations) delete;connect (~nobonds) (*) delete;polyhedra delete;polyhedra bonds (~cations and (atomno=167) and visible);moveto 1.0 -971 195 138 78.9 225;'

,'### adjustable console message level ###'
,'# Jmol 10.x.24 adds "set logLevel n" where n ranges from 0 (minimum of messages) to 5 (all messages). You can also use the JavaScript command <a href="javascript:alert(jmolSetLogLevel)">jmolSetLogLevel(n)</a> PRIOR to getApplet() to add a parameter to the code for the applet. For example, jmolSetLogLevel(0) will produce a SILENT applet.'

,'### atomic orbitals, molecular orbitals, LCAO "cartoon" orbitals, spheres, ellipses, color-mapped planes, user-defined functions, solvent-accessible and -excluded surfaces <p>See <a href=isosurface.htm>isosurface.htm</a>. ###<br><table bgcolor=black cellspacing=0 cellpadding=0><tr><td><img src=img/orbital.jpg width=100 height=100><img src=img/isoesp.jpg width=100 height=100><br ><img src=img/lcao.jpg width=100 height=100><img src=img/functionxy.jpg width=100 height=100></td></tr></table>'
,'# Jmol 10.x.05 - 10.x.18 introduce VERY compact orbitals and other molecular properties as isosurfaces.  These files are generated by Jmol from CUBE files with compression ratios on the order of 400 to 600:1 or from Jmol-generated data. High levels of compression are possible because JVXL files do not allow for variable cutoffs. check out the new "Jmol Voxel File" format at <a href=ch3cl.jvxl target=_blank >ch3cl.jvxl</a>. For a discussion see <a href=http://www.stolaf.edu/people/hansonr/jmol/docs/JVXL-format.pdf>JVXL-format.pdf</a>'

,'### new "select/restrict cell={i j k}" and "unitcell {i j k}" and better polyhedral rendering ###<br><img src=img/poly.jpg width=100 height=100>'
,'# Jmol 10.x.18 allows for the selection of specific unit cells. Coordinates such as {1.5 1.5 1.5} are allowed. In conjunction with this, "unitcell {i j k}" shifts the unit cell and the unit cell axes ("set axesUnitcell") to a new origin. See <a href=poly.htm>poly.htm</a>'


,'### dipoles and arrows ###<br><img src=img/dipole.jpg width=100 height=100>'
,'Jmol 10.x.17 allows for the depiction of dipoles as arrows in space along the line of the bonds with which they are associated. Dipole vectors can also be placed between any two molecular coordinates, serving as generic arrows. The molecular dipole can be shown as well based on Spartan SMOL data. see <a href=dipole.htm>dipole.htm</a>'

,'### reading TRIPOS/SYBYL mol2 data files ###'
,'load cscl.mol2'
,'load zinc.mol2 # several models'
,'model next'


,'### show url ###'
,'# APPLET ONLY: "show url" with or without a filename in quotes after it, pops up a new window with that URL in it. If it begins with "http://" this URL can be from any server on the web.'
,'<a href="javascript:void(jmolScript(\'show url\'))">javascript:void(jmolScript(\'show url\'))</a>'
,'<a href=\'javascript:void(jmolScript("show url \\\"http://google.com\\\""))\'>javascript:void(jmolScript("show url \\\"http://google.com\\\""))</a>'



,'### axes, unitcell, boundbox, frank changes ###'
,'# Starting with Jmol 10.x.08, "set" is optional with axes, unitcell, or boundbox.'
,'# note that true/false or on/off set commands now take "true" as the default'
,'# Jmol 10.x.01 allows definition of the axes with respect to the external window frame, the molecular frame, or based on the unit cell. see <a href=draw.htm>draw.htm</a>'
,'set axesMolecular; axes on'
,'set axesUnitcell; axes on'
,'set axesWindow; axes on'
,'# also added in Jmol 10.x.12: adjustable scale for axes (must be declared after axes are turned on):'
,'axes 5;set axes scale 1.5;'
,'axes dotted;set axes scale 1.0;'

,'axes off'
,'boundbox on'
,'boundbox off'
,'unitcell on'
,'unitcell off'
,'frank on'
,'frank off'

,'### enhancement of mouse action with SHIFT-LEFT (zoom/rotate) ###'
,'# Jmol 10.x.08 separates these a bit so that that act independently -- horizontal rotate only; vertical zoom only.'


,'### selective measurement color ###'
,'# In 10.2, "color measures" change all measurement colors at once. The change here is subtle. If measurement colors have already been set, then "color measures NONE" needs to be invoked to turn off measurement colors prior to resetting them. In addition, "color measurements" now acts on all future measures, allowing for selective coloring of measurements. Thus, "color measure" in 10.x acts on (a) any measures currently with no color assigned and (b) on any future measures. Note that there still is no selective RE-coloring of measurements.'
,'load caffeine.xyz'
,'measure all 1.0 1.3 (carbon) (hydrogen)'
,'color measures green; # same as before'
,'color measures red;measure all 1.0 1.3 (carbon) (oxygen) # only new, since others are already colored'
,'color measures blue;measure all 1.0 1.4 (carbon) (nitrogen) # again, only new'
,'color measures none; # resets all measure colors'
,'color measures yellow; # sets all measure colors (because now all are color "none")'
,'measures off # clears all measurements'

,'### save/restore orientation with and without delay ###'
,'load caffeine.xyz'
,'# now move the model between pressing these various links. The first parameter is the identifier of the save set; the second one in the case of "delay" is the delay in seconds. restoreOrientation() acts over 1 second; the default for restoreOrientationDelayed() is also 1 second, but it can be set to anything. Source: <a href=Jmol-11.js>Jmol-11.js</a>. '
,'# <a href=javascript:alert(jmolSaveOrientation("save1"))>alert(jmolSaveOrientation("save1"))</a>'
,'# <a href=javascript:void(jmolSaveOrientation("save1"))>void(jmolSaveOrientation("save1"))</a>'
,'# <a href=javascript:void(jmolSaveOrientation("save2"))>void(jmolSaveOrientation("save2"))</a>'
,'# <a href=javascript:void(jmolRestoreOrientation("save1"))>void(jmolRestoreOrientation("save1"))</a>'
,'# <a href=javascript:void(jmolRestoreOrientation("save2"))>void(jmolRestoreOrientation("save2"))</a>'
,'# <a href=javascript:void(jmolRestoreOrientationDelayed("save1",0))>void(jmolRestoreOrientationDelayed("save1",0))</a>'
,'# <a href=javascript:void(jmolRestoreOrientationDelayed("save2",3))>void(jmolRestoreOrientationDelayed("save2",3))</a>'
	
,'### experimental method to modify atom positions: jmolSetAtomCoord() and jmolSetAtomCoordRelative() ###'
,'load caffeine.xyz'
,'# Just <a href=javascript:test1()>click here</a> a few times for random changes in atom placement</a>'
,'# Please let me know if this works'
,'#'


,'### set rangeSelected ###'
,'# when true, this flag sets the range for color temperature to be adjustable based on the selected set of atoms being colored'
,'load xxxx.pdb;'
,'# a modified PDB file with information in the b-factor field specific to chain A protein.'
,'restrict none;select *; cartoon;'
,'set rangeSelected false; #standard default'
,'select protein;cartoon;color temperature'
,'# a very narrow range of blue on chain A, because although only A has relevant values, and chain B variation is setting the range.'
,'# no difference, because the color range includes chain B'
,'restrict none;select *;cartoon; color grey;'
,'set rangeSelected true;'
,'select protein and *:A;cartoon;color temperature'
,'# now we see the desired variation in chain A;'

,'### new label formats ###'
,'# Jmol10.x introduces several new label format codes, including %A, %N, %S, %X, %Y, %Z.'
,'load 5hvp.cif;restrict *%1,*%2;color altloc;label %A  # alternate Location "%A"'
,'load "quartz.cif" {1 1 1};label %.2X %.2Y %.2Z # fractional coordinates "%X" "%Y" "%Z"'
,'load "agFUPMOS.cif" {1 1 1};color molecule;label %N # molecule number "%N"'
,'load "agFUPMOS.cif" {1 1 1};color molecule;select fluorine;label %S # crystallographic site "%S"'

,'### points, lines, and planes; specifying coordinates ###'
,'Jmol 10.x can now draw point, line, and triangular or rectangular planes based on single atom positions, group average positions, or specific molecular coordinates. see <a href=draw.htm>draw.htm</a>'

,'### expanded pmesh ###'
,'Jmol 10.x allows now for pmesh data to be give "in line" rather than from a file. This allows for simple definition of points, lines, and planes that is an alternative to the new "draw" command. see <a href=pmesh.htm>pmesh.htm</a>'

,'### fractional coordinates ###'
,'Jmol 10.x.03 introduces a way of specifying fractional coordinates: {1/2, 1/2, 1/2}. A "1" in the denominator is optional: {0.5/, 0.5/, 0.5/}, and in such cases only one slash is necessary: {0.5/, 0.5, 0.5} or {0.5, 0.5, 0.5/}. These may be used in defining the center, in creating draw objects, in defining rotation, spin, and moveto orientation axes, and positions of dipole moments. See <a href=fraction.htm>fraction.htm</a>'

,'### symmetry, unit cells, and multiple lattice reading ###'
,'Jmol 10.x now allows extensive reading of SHELX and CIF symmetry and lattice information. Multiple unit cells can be displayed. see <a href=sym.htm>sym.htm</a> and the <a href=http://fusion.stolaf.edu/chemistry/jmol/xtalx>Jmol Crystal Explorer</a>'

,'### expanded measurements ###'
,'Jmol 10.x.13 allows for a much broader range of measurement calculation and display. All measurements fitting a certain minimum/maximum criterion and matching a specific set of atom selections can be displayed, and the data can be returned using the getProperty script command. see <a href=measure.htm>measure.htm</a>'
,'# NOTE ONE COMPATIBILITY CHANGE: '
,'# "measures OFF" does not delete measures; only hides them; "measures DELETE" added'


,'### set measureAllModels ###'
,'Jmol 10.x.09 lets you set this flag so that when the user clicks on a set of atoms for a measurement, all such atoms in ALL models are measured. Works with scripted "measure" command as well. see <a href=measure.htm>measure.htm</a>'

,'### expanded frame animation capability ###'
,'Jmol 10.x expands the frame command to allow pausing and restarting from a specific frame, playing in reverse, and setting a specific range of frames within which to play. see <a href=measure.htm>measure.htm</a>'

,'### molecular rotation and spinning ###'
,'Jmol 10.x allows for rotation and spinning around axes defined either internally with respect to molecular coordinates or externally (the standard way, using the window frame as a reference. see <a href=draw.htm>draw.htm</a>'

,'### set windowCentered off ###'
,'In conjunction with "set picking center" Jmol 10.x allows for turning off the jumping of the selected atom to the center of the window. see <a href=draw.htm>draw.htm</a>'

,'### PDB and mmCIF alternate location ###'
,'Jmol 10.x allows for comparisons of alternate locations in PDB and CIF files. see <a href=altloc.htm>altloc.htm</a>'

,'### conformation [n] ###'
,'Jmol 10.x allows for depiction of conformations either defined by the user or based simply on file alternate location designations. see <a href=altloc.htm>altloc.htm</a>'

,'### select within(molecule,...)/color molecule ###'
,'Jmol 10.x introduces the "molecule" selector, which selects all atoms covalently bonded to a specific atom or group of atoms. Whole molecules can then be colored or selectively highlighted. see the <a href=http://fusion.stolaf.edu/chemistry/jmol/xtalx>Jmol Crystal Explorer</a>'

,'### color altloc ###'
,'Jmol 10.x introduces color based on alternate location. see <a href=altloc.htm>altloc.htm</a>'

,'### color insertion ###'
,'# Jmol 10.x.02 introduces color based on insertion code.'
,'load new.js1JGQ.pdb;color insertion;restrict none;select *;cartoon on'

,'### multiple file loading ###'
,'Jmol 10.x now allows for multiple file loading. This in conjunction with conformations and alternative locations allows one set of file data to be loaded into two "models". Each model can be given a defined conformation, and then the two conformations can be displayed together. see <a href=altloc.htm>altloc.htm</a>'

,'### using "#jmolscript:" in a data file ###'
,'Jmol 10.x now allows embedded scripts in some data file types (XYZ, MOL, PDB). Not intended to be a replacement for scripts, this allows setting definitions or orientations or other such model-specific scripts so that they run any time the file is loaded. see <a href=pmesh.htm>pmesh.htm</a>'

,'### set defaultLoadScript ###'
,'Jmol 10.x.01 5/17/06 introduces "set defaultLoadScript" allowing the load command to execute a default script after successful file loading. see <a href=altloc.htm>altloc.htm</a>'

,'### reading Spartan smol data files, including vectors and all smol data into auxiliaryInfo ###'
,'Jmol 10.x reads the entire set of data in Spartan SMOL files along with the coordinates and is available via "getProperty auxiliaryinfo". see <a href=spartan.htm>spartan.htm</a>'

,'### getting information ###'
,'Jmol 10.x along with its associated new Jmol-11.js library now allows for the retrieval of a wide range of data related to the model. see <a href=vibrate.htm>vibrate.htm</a>, and try the bracketed links, below:'

 ,' <a href=javascript:dotest(-1)>[appletInfo]</a>'
 +' <a href=javascript:dotest(-2)>[animationInfo]</a>'
 +' <a href=javascript:dotest(0)>[fileName]</a>'
 +' <a href=javascript:dotest(1)>[fileHeader]</a>'
 +' <a href=javascript:dotest(2)>[fileContents]</a>'
 +'<br><a href=javascript:dotest(8.1)>[atomList]</a>'
 +' <a href=javascript:dotest(8)>[atomInfo]</a>'
 +' <a href=javascript:dotest(7)>[bondInfo]</a>'
 +' <a href=javascript:dotest(7.5)>[moleculeInfo]</a>'
 +" <a href=javascript:dotest(10)>[extractModel]</a>"
 +'<br><a href=javascript:dotest(3)>[orientationInfo]</a>'
 +' <a href=javascript:dotest(3.1)>[auxiliaryInfo]</a>'
 +' <a href=javascript:dotest(3.2)>[transformInfo]</a>'
 +' <a href=javascript:dotest(3.3)>[centerInfo]</a>'
 +' <a href=javascript:dotest(3.4)>[boundboxInfo]</a>'
 +"<br><a href=javascript:dotest(4)>[modelInfo]</a>"
 +" <a href=javascript:dotest(4.2)>[polymerInfo]</a>"
 +" <a href=javascript:dotest(4.3)>[chainInfo]</a>"
 +" <a href=javascript:dotest(4.4)>[shapeInfo]</a>"
 +" <a href=javascript:dotest(4.5)>[stateInfo]</a>"
 +" <a href=javascript:dotest(9)>[reload THIS orientation]</a>"
 +"<br><br>"
// +" <a href=javascript:pollApplet()>[jmolStatus]</a>"
 +" monitor: "
 +getCheckList()

//," JSON data returned:<br><textarea name=outputJSON id=outputJSON rows=5 cols=50></textarea>"
," <input  type=checkbox name=idecode id=idecode checked=1>Decoded: <a href=javascript:showoutput()>new window</a><br><textarea name=output id=output rows=5 cols=60 wrap=off></textarea>"
)
remarks=""
//]]>


what="visible"
whatp="centerInfo"
whatm=""

function xshowoutput(s){ if(!s) s=document.getElementById("output").value; dowritenew("<pre>"+s+"</pre>") };function oldshowoutput(){
 dowritenew("<pre>"+document.getElementById("output").value+"</pre>")
}

function dotest(iwhat){
 if(iwhat!=3)monitoron=false
 var s=""
 var sJSON=""
 var info=""
 var sinfo=""
 var sparam=""
 var str=""
 if(iwhat==-1){
   sinfo="appletInfo"
 }else if(iwhat==-2){
   sinfo="animationInfo"
 }else if(iwhat==0){
   str="fileName"
 }else if(iwhat==1){
   str="fileHeader"
   info = jmolGetPropertyAsString(sinfo)
 }else if(iwhat==2){
   str="fileContents"
 }else if(iwhat==3){
   sinfo="orientationInfo"
 }else if(iwhat==3.1){
   sinfo="auxiliaryInfo"
 }else if(iwhat==3.2){
   sinfo="transformInfo"
 }else if(iwhat==3.3){
   sinfo="centerInfo"
 }else if(iwhat==3.4){
   sinfo="boundboxInfo"
 }else if(iwhat==3.5){
   sinfo="zoomInfo"
 }else if(iwhat==4){
   sinfo="modelInfo"
 }else if(iwhat==4.2){
   sparam="PROMPT"
   sinfo="polymerInfo"
 }else if(iwhat==4.3){
   sparam="PROMPT"
   sinfo="chainInfo"
 }else if(iwhat==4.4){
   sinfo="shapeInfo"
 }else if(iwhat==4.5){
   sparam="visible"
   sinfo="stateInfo"
 }else if(iwhat==7){
   sparam="PROMPT"
   sinfo="bondInfo"
 }else if(iwhat==7.5){
   sparam="PROMPT"
   sinfo="moleculeInfo"
 }else if(iwhat==8){
   sparam="PROMPT"
   sinfo="atomInfo"
 }else if(iwhat==8.1){
   sparam="PROMPT"
   sinfo="atomList"
 }else if(iwhat==9){
   info = jmolGetPropertyAsArray("orientationInfo")
   s="load "+jmolGetPropertyAsString("fileName")+";"+info.moveTo
   document.getElementById("cmd").value=s
   jmolScript(s)
 }else if(iwhat==10){
   s=prompt("enter an atom expression",what)
   if(!s)return
   what=s
   s = jmolGetPropertyAsString("extractModel",what)
   var A=jmolGetPropertyAsArray("orientationInfo")
   showoutput(s);   jmolLoadInlineScript(s,A.moveTo)
 }
 if(str!=""){
   s=jmolGetPropertyAsString(str)
 }else if(sinfo!=""){
   if(sparam == "PROMPT"){
     s=prompt("enter an atom expression",what)
     if(!s)return
     what=s
     sparam=what
   }
   if(document.getElementById("idecode").checked){
	s=jmolGetPropertyAsArray(sinfo,sparam)
	s=_jmolEnumerateObject(s,sinfo)
   }else{
	s=jmolGetPropertyAsJSON(sinfo,sparam)
   }
 }
 if(s!="")document.getElementById("output").value=s
}

function parseMessages(A){
 if(!A)return
 var s=""
 for(var i=A.length-1;i>=0;i--){
	s=A[i][3]+"\n"+s
	showmsg("msg",A[i])
 }
 document.getElementById("output").value=s
}

monitoron=0
function domonitor(isiter){
  if(!isiter)monitoron=!monitoron
  if(!monitoron)return
  dotest(3)
  setTimeout("domonitor(1)",delayms)  
}

</script>
</head>
<body>
<script type="text/javascript">showpage(0)</script></body>
</html>
