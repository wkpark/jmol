<project name="Jmol releases" default="deploy" basedir="..">

  <!--
    To use this script, the scp task must be available.
    The scp task requires the jsch jar in the class path.
  -->

  <!-- Contributions -->
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="tools/ant-contrib.jar" />
    </classpath>
  </taskdef>

  <property name="sendZip"         value="true" />
  <property name="dist.dir"        value="build/dist" />
  <property name="src.dir"         value="src" />
  <property name="temp.dir"        value="build/release" />
  <property name="web.dir"         value="/home/frs/project/j/jm/jmol" />
  <property name="web.host"        value="frs.sourceforge.net" /> 
  <property name="prefix.release"  value="Jmol " />

  <echo message="${dist.dir}" />
	
<!--

12/17/2016	
Release Note: switching to semantic versioning (http://semver.org/)
Release Note: incrementing will be at the xx.x.xx level; digits after that are a date stamp
Release Note: for example, the version after 14.8.1020161217-beta will be 14.8.11yyyymmdd-beta
Release Note: When releasing stable version, remove "-beta"
Release Note: (note that semantic versioning does not specify the value of the increment)
	
-->
	
	
  <property file="${dist.dir}/Jmol.properties" prefix="Jmol.properties" />
  <property name="version" value="${Jmol.properties.Jmol.___JmolVersion}" />
  <propertyregex property="version"
  			  override = "true"
	          input="${version}"
  			  regexp='"'
	          replace=""
  		      global="true"
	          />
  <echo message="version=${version}" />

	<loadresource property="versionNoDate">
	  <string value="${version}"/>
	  <filterchain>
	    <tokenfilter>
		      <replaceregex pattern="([0-9]+[.][0-9]+[.][0-9][0-9])(.*)" replace="\1"/>
	    </tokenfilter>
	  </filterchain>
	</loadresource>
	<echo message="versionNoDate: ${versionNoDate}"/>
	
	<loadresource property="versionMajorMinor">
	  <string value="${version}"/>
	  <filterchain>
	    <tokenfilter>
		      <replaceregex pattern="([0-9]+[.][0-9]+)(.*)" replace="\1"/>
	    </tokenfilter>
	  </filterchain>
	</loadresource>
	<echo message="versionMajorMinor: ${versionMajorMinor}"/>
	
	<loadresource property="betaFlag">
	  <string value="${version}"/>
	  <filterchain>
	    <tokenfilter>
	      <replaceregex pattern="([^-]*)([-].*)" replace="\2"/>
	    </tokenfilter>
	  </filterchain>
	</loadresource>
	<echo message="betaFlag: ${betaFlag}"/>

	<property name="path.release"    value="Jmol${betaFlag}/Jmol ${versionMajorMinor}" />


	<!-- Copying files to website -->
  <target name="deploy" >

  	
    <!-- Ask user for confirmation -->

    <input
      message="Destination Path for ${version} (clear to exit)"
      defaultvalue="${path.release}/${prefix.release}${versionNoDate}"
      addproperty="uploadPath"
    />

<!-- 	
  	<input
      message="Filepath  ${uploadPath0} ?"
      validargs="y,n"
      defaultvalue="y"
      addproperty="do.scp"
    />
-->  	
    <condition property="do.abort">
      <equals arg1="n" arg2="${do.scp}"/>
    </condition>
    <fail if="do.abort">Build aborted by user.</fail>

    <!-- Ask user for username and password -->
    <input
      message="${uploadPath} for ${version} Please enter your username."
      addproperty="ssh.user"
    >
    	<!-- handler type="secure"/ -->
    </input>
    <input
      message="Please enter your password."
      addproperty="ssh.password"
    />

    <!-- Prepare temporary image -->
    <delete dir="${temp.dir}" />
    <mkdir dir="${temp.dir}" />
    <mkdir dir="${temp.dir}/${uploadPath}" />
  	
  	<if>
     <equals arg1="${sendZip}" arg2="true" />
  	 <then>
    <copy todir="${temp.dir}/${uploadPath}"
          file="${dist.dir}/Jmol-${version}-binary.zip" />
    <copy tofile="${temp.dir}/${uploadPath}/README-${version}.properties"
          file="${dist.dir}/Jmol.properties" />
    </then>
  	</if>
  	<if>
     <equals arg1="${betaFlag}" arg2="" />
  	 <then>
	    <copy todir="${temp.dir}/${uploadPath}"
	          file="${dist.dir}/Jmol-${version}-binary.tar.gz" />
	    <copy todir="${temp.dir}/${uploadPath}"
	          file="${dist.dir}/Jmol-${version}-full.tar.gz" />
  	 </then>
  	</if>

    <!-- Do the copy using scp -->
    <echo message="Copying binary.zip to ${web.dir}" level="info"/>
    <scp todir="${ssh.user},jmol:${ssh.password}@${web.host}:${web.dir}"
         trust="yes" failonerror="true" verbose="true">
      <fileset dir="${temp.dir}">
        <include name="**/*.zip"/>
        <include name="**/*.properties"/>
      </fileset>
    </scp>
    <echo message="Copying binary.tar.gz to ${web.dir}" level="info"/>
    <scp todir="${ssh.user},jmol:${ssh.password}@${web.host}:${web.dir}"
         trust="yes" failonerror="true" verbose="true">
      <fileset dir="${temp.dir}">
        <include name="**/*-binary.tar.gz"/>
      </fileset>
    </scp>
    <echo message="Copying full.tar.gz to ${web.dir}" level="info"/>
    <scp todir="${ssh.user},jmol:${ssh.password}@${web.host}:${web.dir}"
         trust="yes" failonerror="true" verbose="true">
      <fileset dir="${temp.dir}">
        <include name="**/*-full.tar.gz"/>
      </fileset>
    </scp>

  	<!-- Cleanup -->
    <delete dir="${temp.dir}"/>
  </target>

</project>
