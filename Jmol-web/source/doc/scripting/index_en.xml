<?xml version="1.0"?>
<!DOCTYPE somethingOrAnything [
<!ENTITY eye_candy          SYSTEM "eye_candy.xml" >
<!ENTITY basic_scripting    SYSTEM "basic_scripting.xml" >
]>
<document>
	<body>
		<title>Jmol Scripting</title>
		<header>
			<p><i>
	Please, note that these methods do not use the Jmol.js library, which is 
	the currently recommended method to start scripting JmolApplet.
  			</i></p>
			<p>
        Both the application and the applet support scripting.
        The examples below use the applet, but the scripts can be used
	in the Jmol application too. We recommend testing and debugging
	long scripts within the context of the Jmol application because
	you can receive diagnostic error messages. 
      </p>
			<p>
        Jmol implements a large subset of the RasMol/Chime molecular
	visualization scripting language, plus a good lot of new 
	commands.
			</p>
			<p>
		A full description of the
	RasMol scripting language is available in the RasMol manual
	on the Open RasMol web site at
	<a href="http://www.openrasmol.org/">http://www.openrasmol.org</a>.
	A description of the scripting language extensions for the
	MDL Chime plug-in are available at
	<a href="http://www.mdlchime.com/">http://www.mdlchime.com</a>.
      </p>
			<p>
        A description of the Jmol implementation of the scripting language
	is available at 
	<a href="http://www.stolaf.edu/academics/chemapps/jmol/docs/">
	Interactive Online Scripting Documentation page</a>. 
      </p>
			<p>
        For smaller scripts the transition from
	Chime to Jmol should be straightforward. 
	With larger, more
	complicated Chime web applications you may have challenges
	because the button/event mechanism is different. 
	It is strongly recommended that you use the functionality
	built into <a href="../jslibrary/">Jmol.js</a>,
	a library written in JavaScript which is
	included in the standard downloadable Jmol package.
      </p>
			<p>
        Simple scripts which are executed at applet load time can be
	executed using the "script" parameter as part of your applet
	definition in HTML. These scripts will execute 
	on browser platforms which do not support JavaScript or the
	LiveConnect interface between JavaScript and Java applets.
	If you choose to use this method, see the examples below.
      </p>
			<p>
        To develop more flexible web applications using the Jmol applet,
	you must write JavaScript code which passes text strings using the
	"script" method of the applet, but you don't need to write the code
	since it is all easily implemented 
	by using the functions in Jmol.js library.
      </p>
			<p>
        For additional examples and documentation on Jmol applet scripting
	see the <a href="../docs/">documentation page</a>.
      </p>
		</header>
		<section title="Eye Candy Without JavaScript">
			<p>This example demonstrates how scripting can be used without
      JavaScript. Browsers that do not support LiveConnect communication
      between JavaScript and Java applets will still run this type
      of script.

      <table border="1"><tr><td>
							<appletExample>&eye_candy;</appletExample>
						</td></tr></table>
			</p>
			<br/>
		</section>
		<section title="Basic Scripting">
			<p>
        This example shows some of the scripting available.
        <appletExample>&basic_scripting;</appletExample>
			</p>
		</section>
		<section title="Advanced Scripting">
			<p>
        More sophisticated and easier to code methods of interaction 
        are based on JavaScript, and provided by Jmol.js library.                	
        	</p>
		</section>
	</body>
</document>
