<project name="Jmol" default="all" basedir=".">
  <!--
      DocumentId  $Id: build.xml 21168 2016-06-30 13:50:15Z hansonr $
  -->
	<!--

	Developer note from Bob Hanson, 12/2016

	The Jmol project uses resources from two other projects, JSmol and JSpecView.
	You can modify Jmol without those projects, but both of these projects share code
	from Jmol and, though separate projects, provide the files in Jmol for final distribution.

	Required checkouts include:

	svn+ssh://svn.code.sf.net/p/smol/code, Trunk:trunk
	svn+ssh://svn.code.sf.net/p/jsmol/code, Trunk:trunk
	svn+ssh://svn.code.sf.net/p/jspecview/svn:dev2/JSpecView
	svn+ssh://svn.code.sf.net/p/jspecview/svn:dev2/JSpecViewLib

	Relevant files created in this project by build scripts in those projects include:

	  appletweb/jsmol.zip
	  jars/JSpecView.jar
	  
	  appletweb/jsmol.zip is created using:

	   JSmol/build_11_fromjmol.xml
	   JSmol/build_12_fromjspecview.xml 
	   [eclipse refresh required]
	   JSmol/build_13_tojs.xml
	   
	  jars/JSpecView.jar is created using 

	   JSpecviewLib/build.xml
	   JSpecview/build.xml

	Note that if you modify Jmol source without also running the JSmol build scripts, 
	then JSmol will not reflect your modifications.

	The overall sequence for full HTML5 code creation
	when the Jmol or JSpecView code is modified, is as follows:

	1) Do all coding modifications in the Jmol and JSpecView projects. Never modify JSmol/src.
	2) use jmol/buildmin.xml to create the JAR files.
	2) Build JSpecViewLib and JSpecView if there are changes there. 
	   The JSpecView*.jar files will be copied into this project.
	3) Build JSmol using the build_11.., build_12.., build_13.. 
	   jsmol.zip will be created and copied to jmol/appletweb/.

	4) for distribution, then 

		a) run jmol/builddist.xml
		b) run jmol/tools/jmol-release.xml

	  -->
	
  <!-- Contributions -->
  <!-- <for list ...> construct needs ant-contrib.jar -->
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="tools/ant-contrib.jar" />
    </classpath>
  </taskdef>

  <!-- pull developer-specific settings from their home directory -->
  <property file="${user.home}/.jmol.build.properties" />
  <!-- compile options -->
  <property name="build.sysclasspath" value="ignore" />
  <property name="build.compiler" value="javac1.7" />
  <!-- for some reason, I can't get ant to use this ${java.version}
       property as the value of the source parameter -->
  <property name="java.version" value="1.7" />
  <property name="debug" value="on" />
  <property name="deprecation" value="off" />
  <property name="optimization" value="off" />
	<copy todir="" >
	  <fileset dir="src/org/jmol/viewer/">
	    <include name="Jmol.properties" />
	  </fileset>
	  <filterchain>
	    <striplinecomments>
	      <comment value="#" />
	    </striplinecomments>
	    <linecontains>
	      <contains value="Jmol.___" />
	    </linecontains>
	  </filterchain>
	</copy>
  <property file="Jmol.properties" prefix="Jmol.properties" />
  <property name="version" value="${Jmol.properties.Jmol.___JmolVersion}" />
  <propertyregex property="version"
  			  override = "true"
	          input="${version}"
  			  regexp='"'
	          replace=""
  		      global="true"
	          />
  <echo message="version=${version}" />
  <property name="jvxl_version" value="0.1" />

  <property name="tests.source.dir" value="source-tests" />
  <property name="lib.dir" value="jars" />
  <property name="plugin.dir" value="plugin-jars" />
  <property name="appjars.dir" value="build/appjars" />
  <property name="classes.dir" value="build/classes" />
  <property name="test-classes.dir" value="build/test-classes" />
  <property name="applet.classes.dir" value="build/applet-classes" />
  <property name="apisio.classes.dir" value="build/apisio-classes" />
  <property name="tests.dir" value="build/unit.tests" />
  <property name="javadoc.dir" value="build/javadoc" />
  <property name="jmol.applet.web.dir" value="appletweb" />
  <property name="docbook-xsl" value="docbook-xsl-1.76.1" />
  <property name="docbook-xml" value="docbook-xml-4.4" />
  <property name="naga.jar" value="naga-3_0.jar" />
  <property name="commons-cli.jar" value="commons-cli-1.2.jar" />
  <property name="saxon.jar" value="saxon.jar" />
  <property name="saxon.main" value="com.icl.saxon.StyleSheet" />
  <property name="selfsign.store" value="ca-cert/selfSignedCertificate/selfSignedCertificate.store" />
  <property name="selfsign.storetype" value="jks" />
  <property name="selfsign.storepass" value="selfSignedCertificate" />
  <property name="selfsign.alias" value="selfSignedCertificate" />
  <property name="tsa.url" value="http://timestamp.globalsign.com/scripts/timestamp.dll" />
	  <!-- property name="tsa.url" value="http://tsa.starfieldtech.com" / -->
	
	<!-- http://timestamp.globalsign.com/scripts/timestamp.dll or  http://tsa.starfieldtech.com/, which stopped working 3/27/14 and again on 4/8/14 -->


	<!-- you can set this by defining it in ~/.jmol.build.properties -->
  <property name="keystore.name" value="Must be set by user." />

  <!-- this value is required if you are building the .NET DLL, it must point to the IKVM/bin directory -->
  <property name="ikvm.home" value="Must be set by user." />
	
  <property file="proxy.properties" />

  <import file="tools/build-i18n.xml"/>

  <path id="project.class.path">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
  </path>
  
  <path id="applet-project.class.path">
    <fileset dir="${lib.dir}">
      <include name="*.jar" />
    </fileset>
  </path>
  
  <path id="apisio-project.class.path">
    <fileset dir="${lib.dir}">
      <!-- include name="${vecmath.jar}" / -->
      <include name="netscape.jar" />
      <include name="gnujaxp.jar" />
    </fileset>
  </path>

  <target name="main" id="main" depends="init"/>

	  <!-- target name="main" id="main" depends="init,jar,applet-jar,signed-applet,smiles-applet-jar"/ -->

  <target name="all" id="all" depends="doc,main,dist"/>

  <target name="init" id="init">
    <tstamp/>
  </target>

  <target name="initFailure" id="initFailure">
    <fail message="Init failed. See messages above." />
  </target>

  <target name="setup" id="setup">
    <condition property="docbook-xsl.uptodate">
      <and>
        <uptodate targetfile="build/${docbook-xsl}"
                  srcfile="doc/${docbook-xsl}.tar.gz" />
        <uptodate targetfile="build/${docbook-xsl}.timestamp"
                  srcfile="build/${docbook-xsl}" />
      </and>
    </condition>

    <condition property="docbook-xml.uptodate">
      <and>
        <uptodate targetfile="build/docbook-xml"
                  srcfile="doc/${docbook-xml}.zip" />
        <uptodate targetfile="build/docbook-xml.timestamp"
                  srcfile="build/docbook-xml" />
      </and>
    </condition>

    <condition property="jmolGuide.uptodate">
      <and>
        <uptodate targetfile="build/doc/JmolUserGuide/index.html">
          <srcfiles dir="doc/source"
                    includes="JmolGuide.docbook.xml, guide/*.docbook.xml"/>
        </uptodate>
        <uptodate targetfile="build/doc/JmolUserGuide_fr/index.html">
          <srcfiles dir="doc/source"
                    includes="JmolGuide_fr.docbook.xml, guide/*_fr.docbook.xml"/>
        </uptodate>
      </and>
    </condition>

    <condition property="jmolHistory.uptodate">
      <and>
        <uptodate targetfile="build/doc/JmolHistory/ChangeLog.html">
          <srcfiles dir="doc/source"
                    includes="JmolHistory.xml,JmolHistoryToHtml.xsl,history/changes.xml" />
        </uptodate>
        <uptodate targetfile="build/doc/JmolHistory/ChangeLog_fr.html">
          <srcfiles dir="doc/source"
                    includes="JmolHistory_fr.xml,JmolHistoryToHtml.xsl,history/changes_fr.xml" />
        </uptodate>
        <uptodate targetfile="build/doc/JmolHistory/ChangeLog_nl.html">
          <srcfiles dir="doc/source"
                    includes="JmolHistory_nl.xml,JmolHistoryToHtml.xsl,history/changes_nl.xml" />
        </uptodate>
        <uptodate targetfile="build/doc/JmolHistory/ChangeLog_ro.html">
          <srcfiles dir="doc/source"
                    includes="JmolHistory_ro.xml,JmolHistoryToHtml.xsl,history/changes_ro.xml" />
        </uptodate>
      </and>
    </condition>
    
    <condition property="jmolDevelopersGuide.uptodate">
      <and>
        <uptodate targetfile="build/doc/JmolDevelopersGuide.html">
          <srcfiles dir="doc/source"
                    includes="JmolDevelopersGuide.docbook.xml"/>
        </uptodate>
        <uptodate targetfile="build/doc/JmolDevelopersGuide_fr.html">
          <srcfiles dir="doc/source"
                    includes="JmolDevelopersGuide_fr.docbook.xml"/>
        </uptodate>
        <uptodate targetfile="build/doc/JmolDevelopersGuide_de.html">
          <srcfiles dir="doc/source"
                    includes="JmolDevelopersGuide_de.docbook.xml"/>
        </uptodate>
      </and>
    </condition>

    <condition property="jmolAppletGuide.uptodate">
      <and>
        <uptodate targetfile="build/doc/JmolAppletGuide.html">
          <srcfiles dir="doc/source"
                    includes="JmolAppletGuide.docbook.xml, applet/*.docbook.xml"/>
        </uptodate>
        <uptodate targetfile="build/doc/JmolAppletGuide_fr.html">
          <srcfiles dir="doc/source"
                    includes="JmolAppletGuide_fr.docbook.xml, applet/*_fr.docbook.xml"/>
        </uptodate>
        <uptodate targetfile="build/doc/JmolAppletGuide_de.html">
          <srcfiles dir="doc/source"
                    includes="JmolAppletGuide_de.docbook.xml"/>
        </uptodate>
      </and>
    </condition>

    <available classname="${saxon.main}"
               classpath="${lib.dir}/${saxon.jar}"
               property="xsl.available"/>
    <uptodate property="javadoc.uptodate" targetfile="${javadoc.dir}/index.html">
      <srcfiles dir="src" includes="**/*.java, **/*.html" />
    </uptodate>
    <available file="${keystore.name}" property="keystore.present" />
    <!-- Optional proxy settings (if defined) -->
    <condition property="proxyHost"
               value="-Dhttp.proxyHost=${http.proxyHost}" >
      <not>
        <equals arg1="http.proxyHost" arg2="" />
      </not>
    </condition>
    <condition property="proxyPort"
               value="-Dhttp.proxyPort=${http.proxyPort}" >
      <not>
        <equals arg1="http.proxyPort" arg2="" />
      </not>
    </condition>
  </target>

  

	<target name="dist" id="dist"
          depends="main-i18n,doc">
		
		  <!-- 
		  
		  Bob had problems with Eclipse Juno repeating the entire
		  signing process twice here and crashing (io error in jarsigner) 
		  close to the end of the second round. 	 -->
		
    <!-- first build binary distribution -->
    <delete dir="build/dist/jmol-${version}"/>
    <mkdir dir="build/dist/jmol-${version}"/>
    <copy todir="build/dist/jmol-${version}" >
      <fileset dir="build">
        <include name="Jmol.jar" />
        <include name="JmolData.jar" />
        <include name="JmolLib.jar" />
      </fileset>
      <fileset dir="jars">
        <include name="JSpecView.jar" />
      </fileset>
      <fileset dir=".">
        <include name="jmol" />
        <include name="jmol.sh" />
        <include name="jmol.mac" />
        <include name="jmol.bat" />
        <include name="*.txt" />
      </fileset>
    </copy>
    <copy file="src/org/jmol/viewer/Jmol.properties" tofile="build/dist/jmol-${version}/CHANGES.txt" />
    <chmod perm="ugo+rx">
      <fileset dir="build/dist/jmol-${version}">
        <include name="jmol"/>
        <include name="jmol.sh"/>
        <include name="jmol.bat"/>
      </fileset>
    </chmod>

    <copy todir="build/dist/jmol-${version}" >
      <fileset dir="./appletweb">
        <include name="README*.txt" />
        <include name="jsmol.zip" />
      </fileset>
    </copy>

   <!--
    zip distributions to not retain file permissions ...
    miguel 2 feb 2006 but there have been requests for them anyway -->

    <zip zipfile="build/dist/jmol-${version}-binary.zip" basedir="build/dist"
         includes="jmol-${version}/**" />

    <tar tarfile="build/dist/jmol-${version}-binary.tar.gz"
         compression="gzip" >
      <tarfileset dir="build/dist"
                  excludes="*/jmol,*/jmol.sh"
                  includes="jmol-${version}/**" />
      <tarfileset dir="build/dist"
                  mode="755"
                  includes="*/jmol,*/jmol.sh" />
    </tar>

    <!-- then build source distribution -->

    <copy todir="build/dist/jmol-${version}" >
      <fileset dir=".">
        <include name="applet.classes" />
        <include name="build.xml" />
        <include name="build-i18n.xml" />
      </fileset>
    </copy>

    <copy todir="build/dist/jmol-${version}/src" >
      <fileset dir="src" />
      <fileset dir="srcjsv" />
    </copy>

    <copy todir="build/dist/jmol-${version}/ca-cert" >
      <fileset dir="ca-cert">
        <exclude name="**/*.p12" />
      </fileset>
    </copy>

    <copy todir="build/dist/jmol-${version}/${lib.dir}" >
      <fileset dir="${lib.dir}" />
    </copy>

    <copy todir="build/dist/jmol-${version}/${plugin.dir}" >
      <fileset dir="${plugin.dir}" />
    </copy>

    <copy todir="build/dist/jmol-${version}/appletweb" >
      <fileset dir="appletweb" />
    </copy>

    <copy todir="build/dist/jmol-${version}/manifest" >
      <fileset dir="manifest" />
    </copy>

    <copy todir="build/dist/jmol-${version}/doc" >
      <fileset dir="doc" />
    </copy>

    <copy todir="build/dist/jmol-${version}/tools" >
      <fileset dir="tools" />
    </copy>

    <!-- Jvxl -->
    <copy file="build/Jvxl.jar" tofile="build/dist/Jvxl-${jvxl_version}.jar" failonerror="false" />

    <copy   file="build/doc/JmolDevelopersGuide.html"
            tofile="build/dist/jmol-${version}/doc/JmolDevelopersGuide.html" />
    <copy   file="build/doc/JmolHistory/ChangeLog.html"
            tofile="build/dist/jmol-${version}/ChangeLog.html" />
    <copy todir="build/dist/jmol-${version}/doc/JmolUserGuide">
      <fileset dir="build/doc/JmolUserGuide">
        <include name="**/*.html" />
      </fileset>
    </copy>
    <copy   file="build/doc/JmolAppletGuide.html"
            tofile="build/dist/jmol-${version}/doc/JmolAppletGuide.html" />

<!--
    zip distributions to not retain file permissions
    <zip zipfile="build/dist/jmol-${version}-full.zip" basedir="build/dist"
         includes="jmol-${version}/**" />
    -->

    <tar tarfile="build/dist/jmol-${version}-full.tar.gz"
         compression="gzip" >
      <tarfileset dir="build/dist"
                  excludes="*/jmol,*/jmol.sh"
                  includes="jmol-${version}/**" />
      <tarfileset dir="build/dist"
                  mode="755"
                  includes="*/jmol,*/jmol.sh" />
    </tar>

    <!-- Copy other files to have a complete distribution -->
  	<copy file="build/Jmol.jar" tofile="build/dist/Jmol.jar" />
    <copy file="tools/pom.xml.template" tofile="build/dist/pom.xml.template" />
    <jar jarfile="build/dist/jmol-${version}-javadoc.jar">
      <fileset dir="build/javadoc" />
    </jar>
    <jar jarfile="build/dist/jmol-${version}-sources.jar">
      <fileset dir="src" />
    </jar>
	<copy file="src/org/jmol/viewer/Jmol.properties" tofile="build/dist/Jmol.properties" />
  </target>

  <target name="clean-after-dist" id="clean-after-dist">
    <delete dir="build" includeemptydirs="true">
      <exclude name="dist/**/*"/>
      <exclude name="doc/**/*"/>
    </delete>
    <delete dir="build/dist/jmol-${version}"/>
  </target>


  
  <!-- ********************************
       Documentation Targets
       ******************************** -->
  <target name="doc" id="doc"
          depends="jmolGuide,jmolDevelopersGuide,jmolAppletGuide,jmolHistory,javadoc"/>

  <target name="initdoc" depends="init,check.docbook-xml,check.docbook-xsl,check.xsl" />

  <target name="check.docbook-xsl" depends="setup" unless="docbook-xsl.uptodate" >
    <delete file="build/${docbook-xsl}.timestamp" />
    <delete dir="build/${docbook-xsl}" />
    <mkdir dir="build/${docbook-xsl}" />
    <untar src="doc/${docbook-xsl}.tar.gz" dest="build"
           compression="gzip" />
    <touch file="build/${docbook-xsl}.timestamp" />
  </target>

  <target name="check.docbook-xml" depends="setup" unless="docbook-xml.uptodate" >
    <delete file="build/docbook-xml.timestamp" />
    <delete dir="build/docbook-xml" />
    <mkdir dir="build/docbook-xml" />
    <unzip src="doc/${docbook-xml}.zip" dest="build/docbook-xml" />
    <touch file="build/docbook-xml.timestamp" />
  </target>

  <target name="check.xsl" depends="setup" unless="xsl.available" >
    <echo message="XSLT class '${saxon.main}' not found." />
    <echo message="Note that the documentation is NOT generated now." />
  </target>

  <target name="javadoc" depends="initdoc" unless="javadoc.uptodate"
          description="Generation of Javadoc">
    <mkdir dir="${javadoc.dir}"/>
    <javadoc destdir="${javadoc.dir}" sourcepath="src"
             private="true" encoding="UTF8"
             packagenames="org.openscience.*,org.jmol.*"
             excludepackagenames="org.jmol.jcamp.*">
      <classpath refid="project.class.path" />
      <link href="http://download.oracle.com/javase/7/docs/api/" />
      <tag name="j2sIgnore" enabled="false" />
      <tag name="j2sIgnoreSuperConstructor" enabled="false" />
      <tag name="j2sOverride" enabled="false" />
    </javadoc>
  </target>

  <target name="jmolGuide" id="jmolGuide" depends="initdoc"
          unless="jmolGuide.uptodate"
          description="Generation of User's guide">
    <echo message="Generating user's guide" level="info"/>
    <mkdir dir="build/doc/JmolUserGuide" />
    <java fork="true" dir="build/doc/JmolUserGuide"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <jvmarg value="${proxyHost}" />
      <jvmarg value="${proxyPort}" />
      <arg value="../../../doc/source/JmolGuide.docbook.xml" />
      <arg value="../../${docbook-xsl}/html/chunk.xsl" />
    </java>
    <echo message="Generating user's guide (fr)" level="info"/>
    <mkdir dir="build/doc/JmolUserGuide_fr" />
    <java fork="true" dir="build/doc/JmolUserGuide_fr"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <jvmarg value="${proxyHost}" />
      <jvmarg value="${proxyPort}" />
      <arg value="../../../doc/source/JmolGuide_fr.docbook.xml" />
      <arg value="../../${docbook-xsl}/html/chunk.xsl" />
    </java>
  </target>

  <target name="jmolHistory" id="jmolHistory"
          depends="initdoc" unless="jmolHistory.uptodate"
          description="Generation of history of changes">
    <echo message="Generating history of changes" level="info"/>
    <mkdir dir="build/doc/JmolHistory" />
    <java fork="true" dir="build/doc/JmolHistory"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="ChangeLog.html" />
      <arg value="../../../doc/source/JmolHistory.xml" />
      <arg value="../../../doc/source/JmolHistoryToHtml.xsl" />
    </java>
    <echo message="Generating history of changes (fr)" level="info"/>
    <java fork="true" dir="build/doc/JmolHistory"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="ChangeLog_fr.html" />
      <arg value="../../../doc/source/JmolHistory_fr.xml" />
      <arg value="../../../doc/source/JmolHistoryToHtml.xsl" />
      <arg value="lang=fr" />
    </java>
    <echo message="Generating history of changes (nl)" level="info"/>
    <java fork="true" dir="build/doc/JmolHistory"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="ChangeLog_nl.html" />
      <arg value="../../../doc/source/JmolHistory_nl.xml" />
      <arg value="../../../doc/source/JmolHistoryToHtml.xsl" />
      <arg value="lang=nl" />
    </java>
    <echo message="Generating history of changes (ro)" level="info"/>
    <java fork="true" dir="build/doc/JmolHistory"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="ChangeLog_ro.html" />
      <arg value="../../../doc/source/JmolHistory_ro.xml" />
      <arg value="../../../doc/source/JmolHistoryToHtml.xsl" />
      <arg value="lang=ro" />
    </java>
  </target>

  <target name="jmolDevelopersGuide" id="jmolDevelopersGuide"
          depends="initdoc" unless="jmolDevelopersGuide.uptodate"
          description="Generation of Developer's guide">
    <echo message="Generating developer's guide" level="info"/>
    <java fork="true" dir="build/doc"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="JmolDevelopersGuide.html" />
      <arg value="../../doc/source/JmolDevelopersGuide.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
    <echo message="Generating developer's guide (fr)" level="info"/>
    <java fork="true" dir="build/doc"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="JmolDevelopersGuide_fr.html" />
      <arg value="../../doc/source/JmolDevelopersGuide_fr.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
    <echo message="Generating developer's guide (de)" level="info"/>
    <java fork="true" dir="build/doc"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="JmolDevelopersGuide_de.html" />
      <arg value="../../doc/source/JmolDevelopersGuide_de.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
  </target>

  <target name="jmolAppletGuide" id="jmolAppletGuide" depends="initdoc"
          unless="jmolAppletGuide.uptodate"
          description="Generation of Applet guide">
    <echo message="Generating applet guide" level="info"/>
    <java fork="true" dir="build/doc"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="JmolAppletGuide.html" />
      <arg value="../../doc/source/JmolAppletGuide.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
    <echo message="Generating applet guide (fr)" level="info"/>
    <java fork="true" dir="build/doc"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="JmolAppletGuide_fr.html" />
      <arg value="../../doc/source/JmolAppletGuide_fr.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
    <echo message="Generating applet guide (de)" level="info"/>
    <java fork="true" dir="build/doc"
          classname="${saxon.main}"
          classpath="${lib.dir}/${saxon.jar}" >
      <arg value="-o" />
      <arg value="JmolAppletGuide_de.html" />
      <arg value="../../doc/source/JmolAppletGuide_de.docbook.xml" />
      <arg value="../${docbook-xsl}/html/docbook.xsl" />
    </java>
  </target>

</project>
